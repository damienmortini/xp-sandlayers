{"version":3,"file":"index.js","sources":["../node_modules/dlib/utils/Signal.js","../node_modules/dlib/utils/Ticker.js","../node_modules/dlib/customelements/LoopElement.js","../node_modules/dlib/utils/Loader.js","../node_modules/gl-matrix/src/gl-matrix/common.js","../node_modules/gl-matrix/src/gl-matrix/mat4.js","../node_modules/dlib/math/Matrix4.js","../node_modules/gl-matrix/src/gl-matrix/vec2.js","../node_modules/dlib/math/Vector2.js","../node_modules/gl-matrix/src/gl-matrix/vec3.js","../node_modules/dlib/math/Vector3.js","../node_modules/gl-matrix/src/gl-matrix/vec4.js","../node_modules/dlib/math/Vector4.js","../node_modules/gl-matrix/src/gl-matrix/mat3.js","../node_modules/dlib/math/Matrix3.js","../node_modules/dlib/3d/Shader.js","../node_modules/dlib/gl/GLTexture.js","../node_modules/dlib/gl/GLProgram.js","../node_modules/dlib/gl/GLBuffer.js","../node_modules/dlib/gl/GLVertexAttribute.js","../node_modules/dlib/gl/GLMesh.js","../node_modules/dlib/3d/Camera.js","../node_modules/dlib/input/Pointer.js","../node_modules/gl-matrix/src/gl-matrix/quat.js","../node_modules/dlib/math/Quaternion.js","../node_modules/dlib/3d/controllers/TrackballController.js","../node_modules/dlib/gl/GLVertexArray.js","../node_modules/dlib/gl/GLFrameBuffer.js","../node_modules/dlib/3d/PlaneMesh.js","../node_modules/dlib/utils/WebSocket.js","../node_modules/dlib/input/Keyboard.js","../node_modules/dlib/gui/GUIInput.js","../node_modules/dlib/gui/GUI.js","../node_modules/dlib/shaders/DepthShader.js","../node_modules/dlib/gl/GLObject.js","../node_modules/dlib/shaders/BasicShader.js","../node_modules/dlib/gl/GLPlaneObject.js","../src/main/SandLayer.js","../node_modules/dlib/shaders/BlurShader.js","../src/main/SandLayerProcessing.js","../src/main/View.js","../src/main/index.js"],"sourcesContent":["export default class Signal extends Set {\n  constructor() {\n    super();\n    \n    this._onceCallbacks = new Set();\n  }\n\n  add(value, {once = false} = {}) {\n    if(once) {\n      this._onceCallbacks.add(value);\n    }\n\n    super.add(value);\n  }\n\n  dispatch(value) {\n    for (let callback of this) {\n      callback(value);\n\n      if(this._onceCallbacks.has(callback)) {\n        this._onceCallbacks.delete(callback);\n        this.delete(callback);\n      }\n    }\n  }\n}\n","import Signal from \"./Signal.js\";\n\nclass Ticker extends Signal {\n  constructor() {\n    super();\n    \n    this._updateBinded = this.update.bind(this);\n\n    this._previousTimestamp = window.performance.now();\n    this.deltaTime = 0;\n    this.timeScale = 1;\n\n    this.update();\n  }\n\n  update(time) {\n    requestAnimationFrame(this._updateBinded);\n\n    const timestamp = window.performance.now();\n    this.deltaTime = (timestamp - this._previousTimestamp) * .001;\n    this.timeScale = this.deltaTime / .0166666667;\n    this._previousTimestamp = timestamp;\n\n    this.dispatch(time);\n  }\n}\n\nexport default new Ticker();\n","import Ticker from \"../utils/Ticker.js\";\n\nexport default class LoopElement extends HTMLElement {\n  constructor({autoplay = false, background = false} = {}) {\n    super();\n    this._autoplay = autoplay || this.hasAttribute(\"autoplay\");\n    this._background = background || this.hasAttribute(\"background\");\n\n    this.paused = true;\n    this._pausedByBlur = false;\n\n    this._updateBinded = this.update.bind(this);\n  }\n\n  connectedCallback() {\n    if(!this._background) {\n      window.top.addEventListener(\"blur\", this._onBlur = () => {\n        this._pausedByBlur = !this.paused;\n        this.pause();\n      });\n      window.top.addEventListener(\"focus\", this._onFocus = () => {\n        if(this._pausedByBlur) {\n          this.play();\n        }\n      });\n    }\n    if(window.top.document.hasFocus() && this._autoplay) {\n      this.play();\n    } else if (this._autoplay) {\n      this._pausedByBlur = true;\n      requestAnimationFrame(this._updateBinded);\n    }\n  }\n\n  disconnectedCallback() {\n    this.pause();\n    window.top.removeEventListener(\"blur\", this._onBlur);\n    window.top.removeEventListener(\"focus\", this._onFocus);\n  }\n\n  play() {\n    this.paused = false;\n    this._pausedByBlur = false;\n    Ticker.add(this._updateBinded);\n    this.dispatchEvent(new Event(\"playing\"));\n  }\n\n  pause() {\n    this.paused = true;\n    Ticker.delete(this._updateBinded);\n    this.dispatchEvent(new Event(\"pause\"));\n  }\n\n  update() {}\n}\n\nwindow.customElements.define(\"dlib-loop\", LoopElement);\n","let baseURI = \"\";\n\nconst PROMISES = new Map();\nconst OBJECTS = new Map();\n\nconst TYPE_MAP = new Map([\n  [\"text\", new Set([\"txt\", \"html\", \"js\", \"svg\"])],\n  [\"json\", new Set([\"json\"])],\n  [\"binary\", new Set([\"bin\"])],\n  [\"image\", new Set([\"png\", \"jpg\", \"gif\"])],\n  [\"video\", new Set([\"mp4\", \"webm\"])],\n  [\"audio\", new Set([\"mp3\", \"ogg\"])],\n  [\"style\", new Set([\"css\"])],\n  [\"font\", new Set([\"woff\", \"woff2\", \"ttf\"])],\n]);\n\nexport default class Loader {\n  static get onLoad() {\n    return Promise.all(PROMISES.values());\n  }\n\n  static get promises() {\n    return PROMISES;\n  }\n\n  static get typeMap() {\n    return TYPE_MAP;\n  }\n\n  static get(value) {\n    return OBJECTS.get(value);\n  }\n\n  static get baseURI() {\n    return baseURI;\n  }\n\n  static set baseURI(value) {\n    baseURI = value;\n  }\n\n  static load(values) {\n    const returnArray = values instanceof Array;\n    \n    if(!returnArray) {\n      values = [values];\n    }\n\n    let promises = [];\n\n    for (let value of values) {\n      if(!value) {\n        continue;\n      }\n\n      let type;\n      if(typeof value === \"object\") {\n        type = value.type;\n        value = value.value;\n      }\n\n      const src = `${baseURI}${typeof value === \"string\" ? value : (value.href || value.src)}`;\n      const extension = /[\\\\/](.*)\\.(.*)$/.exec(src)[2];\n\n      if(!type) {\n        for (const [key, value] of TYPE_MAP) {\n          if(value.has(extension)) {\n            type = key;\n            break;\n          }\n        }\n      }\n\n      let promise = new Promise(function(resolve, reject) {\n        if(PROMISES.get(value)) {\n          PROMISES.get(value).then(resolve);\n          return;\n        }\n        \n        if(Loader.get(value)) {\n          resolve(Loader.get(value));\n          return;\n        }\n\n        fetch(`${baseURI}${src}`)\n        .catch(() => {\n          return new Promise(function(resolve, reject) {\n            const xhr = new XMLHttpRequest\n            xhr.onload = function() {\n              resolve(new Response(xhr.responseText, {status: xhr.status}))\n            }\n            xhr.open(\"GET\", `${baseURI}${src}`)\n            xhr.send(null)\n          })\n        })\n        .then((response) => {\n          if(type === \"text\") {\n            return response.text();\n          } else if(type === \"json\") {\n            return response.json();\n          } else if(type === \"binary\") {\n            return response.arrayBuffer();\n          } else if(type === \"image\") {\n            return new Promise((resolve) => {\n              const image = document.createElement(\"img\");\n              image.onload = () => { resolve(image); }\n              image.src = src;\n            });\n          } else if(type === \"video\" || type === \"audio\") {\n            return new Promise((resolve) => {\n              const media = document.createElement(type);\n              media.oncanplaythrough = () => { resolve(media); }\n              media.src = src;\n            });\n          } else if(type === \"style\") {\n            return new Promise((resolve) => {\n              const link = document.createElement(\"link\");\n              link.rel = \"stylesheet\";\n              link.type = \"text/css\";\n              link.onload = () => { resolve(link); }\n              document.head.appendChild(link);\n              link.href = src;\n            });\n          } else if(type === \"font\") {\n            return new Promise((resolve) => {\n              let fontFace = new FontFace(/([^\\/]*)\\.(woff|woff2|ttf)$/.exec(value)[1], `url(\"${value}\")`);\n              document.fonts.add(fontFace);\n              return fontFace.load();\n            });\n          } else if(type === \"template\") {\n            return response.text().then((html) => {\n              const template = document.createElement(\"template\");\n              template.innerHTML = html;\n              return template;\n            });\n          } else {\n            return response.blob();\n          }\n        })\n        .then((response) => {\n          PROMISES.delete(value);\n          OBJECTS.set(value, response);\n          resolve(response);\n        });\n      });\n\n      promises.push(promise);\n      PROMISES.set(value, promise);\n    }\n\n    return returnArray ? Promise.all(promises) : promises[0];\n  }\n}\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE. */\r\n\r\n/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n\r\n// Configuration Constants\r\nexport const EPSILON = 0.000001;\r\nexport let ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\r\nexport const RANDOM = Math.random;\r\n\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\r\nexport function setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\n\r\nconst degree = Math.PI / 180;\r\n\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\nexport function toRadian(a) {\r\n  return a * degree;\r\n}\r\n\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  return Math.abs(a - b) <= EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}\r\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE. */\r\n\r\nimport * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4x4 Matrix\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function create() {\r\n  let out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function clone(a) {\r\n  let out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  let out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    let a01 = a[1], a02 = a[2], a03 = a[3];\r\n    let a12 = a[6], a13 = a[7];\r\n    let a23 = a[11];\r\n\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function invert(out, a) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\r\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\r\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\r\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n  let b00 = a00 * a11 - a01 * a10;\r\n  let b01 = a00 * a12 - a02 * a10;\r\n  let b02 = a00 * a13 - a03 * a10;\r\n  let b03 = a01 * a12 - a02 * a11;\r\n  let b04 = a01 * a13 - a03 * a11;\r\n  let b05 = a02 * a13 - a03 * a12;\r\n  let b06 = a20 * a31 - a21 * a30;\r\n  let b07 = a20 * a32 - a22 * a30;\r\n  let b08 = a20 * a33 - a23 * a30;\r\n  let b09 = a21 * a32 - a22 * a31;\r\n  let b10 = a21 * a33 - a23 * a31;\r\n  let b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function adjoint(out, a) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\r\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\r\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\r\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n  out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\r\n  out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n  out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\r\n  out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n  out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n  out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\r\n  out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n  out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\r\n  out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\r\n  out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n  out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\r\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n  out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\r\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n  out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\r\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\r\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\r\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n  let b00 = a00 * a11 - a01 * a10;\r\n  let b01 = a00 * a12 - a02 * a10;\r\n  let b02 = a00 * a13 - a03 * a10;\r\n  let b03 = a01 * a12 - a02 * a11;\r\n  let b04 = a01 * a13 - a03 * a11;\r\n  let b05 = a02 * a13 - a03 * a12;\r\n  let b06 = a20 * a31 - a21 * a30;\r\n  let b07 = a20 * a32 - a22 * a30;\r\n  let b08 = a20 * a33 - a23 * a30;\r\n  let b09 = a21 * a32 - a22 * a31;\r\n  let b10 = a21 * a33 - a23 * a31;\r\n  let b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\r\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\r\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\r\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n  // Cache only the current line of the second matrix\r\n  let b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\r\n  out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n  out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n  out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n  out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n  b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\r\n  out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n  out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n  out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n  out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n  b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\r\n  out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n  out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n  out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n  out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n  b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\r\n  out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n  out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n  out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n  out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\nexport function translate(out, a, v) {\r\n  let x = v[0], y = v[1], z = v[2];\r\n  let a00, a01, a02, a03;\r\n  let a10, a11, a12, a13;\r\n  let a20, a21, a22, a23;\r\n\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\r\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\r\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\r\n\r\n    out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\r\n    out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\r\n    out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\r\n\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  let x = v[0], y = v[1], z = v[2];\r\n\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n  let x = axis[0], y = axis[1], z = axis[2];\r\n  let len = Math.sqrt(x * x + y * y + z * z);\r\n  let s, c, t;\r\n  let a00, a01, a02, a03;\r\n  let a10, a11, a12, a13;\r\n  let a20, a21, a22, a23;\r\n  let b00, b01, b02;\r\n  let b10, b11, b12;\r\n  let b20, b21, b22;\r\n\r\n  if (Math.abs(len) < glMatrix.EPSILON) { return null; }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\r\n  a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\r\n  a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\r\n\r\n  // Construct the elements of the rotation matrix\r\n  b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  let s = Math.sin(rad);\r\n  let c = Math.cos(rad);\r\n  let a10 = a[4];\r\n  let a11 = a[5];\r\n  let a12 = a[6];\r\n  let a13 = a[7];\r\n  let a20 = a[8];\r\n  let a21 = a[9];\r\n  let a22 = a[10];\r\n  let a23 = a[11];\r\n\r\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\r\n    out[0]  = a[0];\r\n    out[1]  = a[1];\r\n    out[2]  = a[2];\r\n    out[3]  = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  let s = Math.sin(rad);\r\n  let c = Math.cos(rad);\r\n  let a00 = a[0];\r\n  let a01 = a[1];\r\n  let a02 = a[2];\r\n  let a03 = a[3];\r\n  let a20 = a[8];\r\n  let a21 = a[9];\r\n  let a22 = a[10];\r\n  let a23 = a[11];\r\n\r\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\r\n    out[4]  = a[4];\r\n    out[5]  = a[5];\r\n    out[6]  = a[6];\r\n    out[7]  = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  let s = Math.sin(rad);\r\n  let c = Math.cos(rad);\r\n  let a00 = a[0];\r\n  let a01 = a[1];\r\n  let a02 = a[2];\r\n  let a03 = a[3];\r\n  let a10 = a[4];\r\n  let a11 = a[5];\r\n  let a12 = a[6];\r\n  let a13 = a[7];\r\n\r\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\r\n    out[8]  = a[8];\r\n    out[9]  = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotation(out, rad, axis) {\r\n  let x = axis[0], y = axis[1], z = axis[2];\r\n  let len = Math.sqrt(x * x + y * y + z * z);\r\n  let s, c, t;\r\n\r\n  if (Math.abs(len) < glMatrix.EPSILON) { return null; }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromXRotation(out, rad) {\r\n  let s = Math.sin(rad);\r\n  let c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0]  = 1;\r\n  out[1]  = 0;\r\n  out[2]  = 0;\r\n  out[3]  = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromYRotation(out, rad) {\r\n  let s = Math.sin(rad);\r\n  let c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0]  = c;\r\n  out[1]  = 0;\r\n  out[2]  = -s;\r\n  out[3]  = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromZRotation(out, rad) {\r\n  let s = Math.sin(rad);\r\n  let c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0]  = c;\r\n  out[1]  = s;\r\n  out[2]  = 0;\r\n  out[3]  = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  let x = q[0], y = q[1], z = q[2], w = q[3];\r\n  let x2 = x + x;\r\n  let y2 = y + y;\r\n  let z2 = z + z;\r\n\r\n  let xx = x * x2;\r\n  let xy = x * y2;\r\n  let xz = x * z2;\r\n  let yy = y * y2;\r\n  let yz = y * z2;\r\n  let zz = z * z2;\r\n  let wx = w * x2;\r\n  let wy = w * y2;\r\n  let wz = w * z2;\r\n\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getScaling(out, mat) {\r\n  let m11 = mat[0];\r\n  let m12 = mat[1];\r\n  let m13 = mat[2];\r\n  let m21 = mat[4];\r\n  let m22 = mat[5];\r\n  let m23 = mat[6];\r\n  let m31 = mat[8];\r\n  let m32 = mat[9];\r\n  let m33 = mat[10];\r\n\r\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\nexport function getRotation(out, mat) {\r\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n  let trace = mat[0] + mat[5] + mat[10];\r\n  let S = 0;\r\n\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (mat[6] - mat[9]) / S;\r\n    out[1] = (mat[8] - mat[2]) / S;\r\n    out[2] = (mat[1] - mat[4]) / S;\r\n  } else if ((mat[0] > mat[5])&(mat[0] > mat[10])) {\r\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\r\n    out[3] = (mat[6] - mat[9]) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (mat[1] + mat[4]) / S;\r\n    out[2] = (mat[8] + mat[2]) / S;\r\n  } else if (mat[5] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\r\n    out[3] = (mat[8] - mat[2]) / S;\r\n    out[0] = (mat[1] + mat[4]) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (mat[6] + mat[9]) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\r\n    out[3] = (mat[1] - mat[4]) / S;\r\n    out[0] = (mat[8] + mat[2]) / S;\r\n    out[1] = (mat[6] + mat[9]) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  let x = q[0], y = q[1], z = q[2], w = q[3];\r\n  let x2 = x + x;\r\n  let y2 = y + y;\r\n  let z2 = z + z;\r\n\r\n  let xx = x * x2;\r\n  let xy = x * y2;\r\n  let xz = x * z2;\r\n  let yy = y * y2;\r\n  let yz = y * z2;\r\n  let zz = z * z2;\r\n  let wx = w * x2;\r\n  let wy = w * y2;\r\n  let wz = w * z2;\r\n  let sx = s[0];\r\n  let sy = s[1];\r\n  let sz = s[2];\r\n\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  let x = q[0], y = q[1], z = q[2], w = q[3];\r\n  let x2 = x + x;\r\n  let y2 = y + y;\r\n  let z2 = z + z;\r\n\r\n  let xx = x * x2;\r\n  let xy = x * y2;\r\n  let xz = x * z2;\r\n  let yy = y * y2;\r\n  let yz = y * z2;\r\n  let zz = z * z2;\r\n  let wx = w * x2;\r\n  let wy = w * y2;\r\n  let wz = w * z2;\r\n\r\n  let sx = s[0];\r\n  let sy = s[1];\r\n  let sz = s[2];\r\n\r\n  let ox = o[0];\r\n  let oy = o[1];\r\n  let oz = o[2];\r\n\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\r\n  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\r\n  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\nexport function fromQuat(out, q) {\r\n  let x = q[0], y = q[1], z = q[2], w = q[3];\r\n  let x2 = x + x;\r\n  let y2 = y + y;\r\n  let z2 = z + z;\r\n\r\n  let xx = x * x2;\r\n  let yx = y * x2;\r\n  let yy = y * y2;\r\n  let zx = z * x2;\r\n  let zy = z * y2;\r\n  let zz = z * z2;\r\n  let wx = w * x2;\r\n  let wy = w * y2;\r\n  let wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function frustum(out, left, right, bottom, top, near, far) {\r\n  let rl = 1 / (right - left);\r\n  let tb = 1 / (top - bottom);\r\n  let nf = 1 / (near - far);\r\n  out[0] = (near * 2) * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = (near * 2) * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = (far * near * 2) * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspective(out, fovy, aspect, near, far) {\r\n  let f = 1.0 / Math.tan(fovy / 2);\r\n  let nf = 1 / (near - far);\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = (2 * far * near) * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\r\n  let upTan = Math.tan(fov.upDegrees * Math.PI/180.0);\r\n  let downTan = Math.tan(fov.downDegrees * Math.PI/180.0);\r\n  let leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0);\r\n  let rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0);\r\n  let xScale = 2.0 / (leftTan + rightTan);\r\n  let yScale = 2.0 / (upTan + downTan);\r\n\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = ((upTan - downTan) * yScale * 0.5);\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = (far * near) / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function ortho(out, left, right, bottom, top, near, far) {\r\n  let lr = 1 / (left - right);\r\n  let bt = 1 / (bottom - top);\r\n  let nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function lookAt(out, eye, center, up) {\r\n  let x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\r\n  let eyex = eye[0];\r\n  let eyey = eye[1];\r\n  let eyez = eye[2];\r\n  let upx = up[0];\r\n  let upy = up[1];\r\n  let upz = up[2];\r\n  let centerx = center[0];\r\n  let centery = center[1];\r\n  let centerz = center[2];\r\n\r\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\r\n      Math.abs(eyey - centery) < glMatrix.EPSILON &&\r\n      Math.abs(eyez - centerz) < glMatrix.EPSILON) {\r\n    return identity(out);\r\n  }\r\n\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n\r\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n\r\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function targetTo(out, eye, target, up) {\r\n  let eyex = eye[0],\r\n      eyey = eye[1],\r\n      eyez = eye[2],\r\n      upx = up[0],\r\n      upy = up[1],\r\n      upz = up[2];\r\n\r\n  let z0 = eyex - target[0],\r\n      z1 = eyey - target[1],\r\n      z2 = eyez - target[2];\r\n\r\n  let len = z0*z0 + z1*z1 + z2*z2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n\r\n  let x0 = upy * z2 - upz * z1,\r\n      x1 = upz * z0 - upx * z2,\r\n      x2 = upx * z1 - upy * z0;\r\n\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\r\n          a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\r\n          a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +\r\n          a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\r\n}\r\n\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + (b[0] * scale);\r\n  out[1] = a[1] + (b[1] * scale);\r\n  out[2] = a[2] + (b[2] * scale);\r\n  out[3] = a[3] + (b[3] * scale);\r\n  out[4] = a[4] + (b[4] * scale);\r\n  out[5] = a[5] + (b[5] * scale);\r\n  out[6] = a[6] + (b[6] * scale);\r\n  out[7] = a[7] + (b[7] * scale);\r\n  out[8] = a[8] + (b[8] * scale);\r\n  out[9] = a[9] + (b[9] * scale);\r\n  out[10] = a[10] + (b[10] * scale);\r\n  out[11] = a[11] + (b[11] * scale);\r\n  out[12] = a[12] + (b[12] * scale);\r\n  out[13] = a[13] + (b[13] * scale);\r\n  out[14] = a[14] + (b[14] * scale);\r\n  out[15] = a[15] + (b[15] * scale);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\r\n         a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] &&\r\n         a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\r\n         a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  let a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3];\r\n  let a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7];\r\n  let a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11];\r\n  let a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];\r\n\r\n  let b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3];\r\n  let b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7];\r\n  let b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11];\r\n  let b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\r\n\r\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\r\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\r\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\r\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\r\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\r\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\r\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\r\n          Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\r\n          Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\r\n          Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\r\n          Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\r\n          Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\r\n          Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\r\n          Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\nexport const mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\nexport const sub = subtract;\r\n","import * as mat4 from \"../../gl-matrix/src/gl-matrix/mat4.js\";\r\n\r\nexport default class Matrix4 extends Float32Array {\r\n  constructor(array = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]) {\r\n    super(array);\r\n    return this;\r\n  }\r\n\r\n  set x(value) {\r\n    this[12] = value;\r\n  }\r\n\r\n  get x() {\r\n    return this[12];\r\n  }\r\n\r\n  set y(value) {\r\n    this[13] = value;\r\n  }\r\n\r\n  get y() {\r\n    return this[13];\r\n  }\r\n\r\n  set z(value) {\r\n    this[14] = value;\r\n  }\r\n\r\n  get z() {\r\n    return this[14];\r\n  }\r\n\r\n  set w(value) {\r\n    this[15] = value;\r\n  }\r\n\r\n  get w() {\r\n    return this[15];\r\n  }\r\n\r\n  set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n    if(m00.length) {\r\n      return this.copy(m00);\r\n    }\r\n    mat4.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\r\n    return this;\r\n  }\r\n\r\n  translate(vector3, matrix4 = this) {\r\n    mat4.translate(this, matrix4, vector3);\r\n    return this;\r\n  }\r\n\r\n  rotateX(value, matrix4 = this) {\r\n    mat4.rotateX(this, matrix4, value);\r\n    return this;\r\n  }\r\n\r\n  rotateY(value, matrix4 = this) {\r\n    mat4.rotateY(this, matrix4, value);\r\n    return this;\r\n  }\r\n\r\n  rotateZ(value, matrix4 = this) {\r\n    mat4.rotateZ(this, matrix4, value);\r\n    return this;\r\n  }\r\n\r\n  scale(value, matrix4 = this) {\r\n    mat4.scale(this, matrix4, typeof value === \"number\" ? [value, value, value] : value);\r\n    return this;\r\n  }\r\n\r\n  multiply(matrix4a, matrix4b) {\r\n    if (matrix4b) {\r\n      mat4.multiply(this, matrix4a, matrix4b);\r\n    } else {\r\n      mat4.multiply(this, this, matrix4a);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  identity() {\r\n    mat4.identity(this);\r\n    return this;\r\n  }\r\n\r\n  copy(matrix4) {\r\n    mat4.copy(this, matrix4);\r\n    return this;\r\n  }\r\n\r\n  fromPerspective({fov, aspectRatio, near, far} = {}) {\r\n    mat4.perspective(this, fov, aspectRatio, near, far);\r\n    return this;\r\n  }\r\n\r\n  fromQuaternion(quaternion) {\r\n    mat4.fromQuat(this, quaternion);\r\n    return this;\r\n  }\r\n\r\n  setPosition(vector3) {\r\n    this.x = vector3[0];\r\n    this.y = vector3[1];\r\n    this.z = vector3[2];\r\n    return this;\r\n  }\r\n\r\n  invert(matrix4 = this) {\r\n    mat4.invert(this, matrix4);\r\n    return this;\r\n  }\r\n}\r\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE. */\r\n\r\nimport * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function create() {\r\n  let out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function clone(a) {\r\n  let out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function fromValues(x, y) {\r\n  let out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\r\nexport function set(out, x, y) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  return out;\r\n};\r\n\r\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  return out;\r\n};\r\n\r\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  return out;\r\n};\r\n\r\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  return out;\r\n};\r\n\r\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\r\nexport function round (out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  return out;\r\n};\r\n\r\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + (b[0] * scale);\r\n  out[1] = a[1] + (b[1] * scale);\r\n  return out;\r\n};\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0],\r\n    y = b[1] - a[1];\r\n  return Math.sqrt(x*x + y*y);\r\n};\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0],\r\n    y = b[1] - a[1];\r\n  return x*x + y*y;\r\n};\r\n\r\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0],\r\n    y = a[1];\r\n  return Math.sqrt(x*x + y*y);\r\n};\r\n\r\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength (a) {\r\n  var x = a[0],\r\n    y = a[1];\r\n  return x*x + y*y;\r\n};\r\n\r\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  return out;\r\n};\r\n\r\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0],\r\n    y = a[1];\r\n  var len = x*x + y*y;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n  }\r\n  return out;\r\n};\r\n\r\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1];\r\n};\r\n\r\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var z = a[0] * b[1] - a[1] * b[0];\r\n  out[0] = out[1] = 0;\r\n  out[2] = z;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount between the two inputs\r\n * @returns {vec2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0],\r\n    ay = a[1];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  return out;\r\n};\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  out[0] = Math.cos(r) * scale;\r\n  out[1] = Math.sin(r) * scale;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2(out, a, m) {\r\n  var x = a[0],\r\n    y = a[1];\r\n  out[0] = m[0] * x + m[2] * y;\r\n  out[1] = m[1] * x + m[3] * y;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2d(out, a, m) {\r\n  var x = a[0],\r\n    y = a[1];\r\n  out[0] = m[0] * x + m[2] * y + m[4];\r\n  out[1] = m[1] * x + m[3] * y + m[5];\r\n  return out;\r\n};\r\n\r\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n    y = a[1];\r\n  out[0] = m[0] * x + m[3] * y + m[6];\r\n  out[1] = m[1] * x + m[4] * y + m[7];\r\n  return out;\r\n};\r\n\r\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  let x = a[0];\r\n  let y = a[1];\r\n  out[0] = m[0] * x + m[4] * y + m[12];\r\n  out[1] = m[1] * x + m[5] * y + m[13];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  let a0 = a[0], a1 = a[1];\r\n  let b0 = b[0], b1 = b[1];\r\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\r\nexport const len = length;\r\n\r\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\r\nexport const sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\r\nexport const mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\r\nexport const div = divide;\r\n\r\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\r\nexport const dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\r\nexport const sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\r\nexport const sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport const forEach = (function() {\r\n  let vec = create();\r\n\r\n  return function(a, stride, offset, count, fn, arg) {\r\n    let i, l;\r\n    if(!stride) {\r\n      stride = 2;\r\n    }\r\n\r\n    if(!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if(count) {\r\n      l = Math.min((count * stride) + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for(i = offset; i < l; i += stride) {\r\n      vec[0] = a[i]; vec[1] = a[i+1];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0]; a[i+1] = vec[1];\r\n    }\r\n\r\n    return a;\r\n  };\r\n})();\r\n","import * as vec2 from \"../../gl-matrix/src/gl-matrix/vec2.js\";\r\n\r\nexport default class Vector2 extends Float32Array {\r\n  constructor(x = 0, y = 0) {\r\n    super(2);\r\n    this.set(x, y);\r\n    return this;\r\n  }\r\n\r\n  get x() {\r\n    return this[0];\r\n  }\r\n\r\n  set x(value) {\r\n    this[0] = value;\r\n  }\r\n\r\n  get y() {\r\n    return this[1];\r\n  }\r\n\r\n  set y(value) {\r\n    this[1] = value;\r\n  }\r\n\r\n  set(x, y) {\r\n    vec2.set(this, x, y);\r\n    return this;\r\n  }\r\n\r\n  copy(vector2) {\r\n    vec2.copy(this, vector2);\r\n    return this;\r\n  }\r\n\r\n  add(vector2) {\r\n    vec2.add(this, this, vector2);\r\n    return this;\r\n  }\r\n\r\n  get size() {\r\n    return vec2.length(this);\r\n  }\r\n\r\n  get squaredSize() {\r\n    return vec2.squaredLength(this);\r\n  }\r\n\r\n  subtract(vector2) {\r\n    vec2.subtract(this, this, vector2);\r\n    return this;\r\n  }\r\n\r\n  negate(vector2 = this) {\r\n    vec2.negate(this, vector2);\r\n    return this;\r\n  }\r\n\r\n  cross(vector2a, vector2b) {\r\n    vec2.cross(this, vector2a, vector2b);\r\n    return this;\r\n  }\r\n\r\n  scale(value) {\r\n    vec2.scale(this, this, value);\r\n    return this;\r\n  }\r\n\r\n  normalize() {\r\n    vec2.normalize(this, this);\r\n  }\r\n\r\n  dot(vector2) {\r\n    return vec2.dot(this, vector2);\r\n  }\r\n\r\n  equals(vector2) {\r\n    return vec2.exactEquals(this, vector2);\r\n  }\r\n\r\n  applyMatrix3(matrix3) {\r\n    vec2.transformMat3(this, this, matrix3);\r\n    return this;\r\n  }\r\n\r\n  applyMatrix4(matrix4) {\r\n    vec2.transformMat4(this, this, matrix4);\r\n    return this;\r\n  }\r\n\r\n  lerp(vector2, value) {\r\n    vec2.lerp(this, this, vector2, value);\r\n  }\r\n\r\n  clone() {\r\n    return new Vector2(this.x, this.y);\r\n  }\r\n}\r\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE. */\r\n\r\nimport * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function create() {\r\n  let out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  let x = a[0];\r\n  let y = a[1];\r\n  let z = a[2];\r\n  return Math.sqrt(x*x + y*y + z*z);\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function fromValues(x, y, z) {\r\n  let out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\nexport function set(out, x, y, z) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + (b[0] * scale);\r\n  out[1] = a[1] + (b[1] * scale);\r\n  out[2] = a[2] + (b[2] * scale);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  let x = b[0] - a[0];\r\n  let y = b[1] - a[1];\r\n  let z = b[2] - a[2];\r\n  return Math.sqrt(x*x + y*y + z*z);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  let x = b[0] - a[0];\r\n  let y = b[1] - a[1];\r\n  let z = b[2] - a[2];\r\n  return x*x + y*y + z*z;\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  let x = a[0];\r\n  let y = a[1];\r\n  let z = a[2];\r\n  return x*x + y*y + z*z;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\nexport function normalize(out, a) {\r\n  let x = a[0];\r\n  let y = a[1];\r\n  let z = a[2];\r\n  let len = x*x + y*y + z*z;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n    out[2] = a[2] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  let ax = a[0], ay = a[1], az = a[2];\r\n  let bx = b[0], by = b[1], bz = b[2];\r\n\r\n  out[0] = ay * bz - az * by;\r\n  out[1] = az * bx - ax * bz;\r\n  out[2] = ax * by - ay * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  let ax = a[0];\r\n  let ay = a[1];\r\n  let az = a[2];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function hermite(out, a, b, c, d, t) {\r\n  let factorTimes2 = t * t;\r\n  let factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n  let factor2 = factorTimes2 * (t - 2) + t;\r\n  let factor3 = factorTimes2 * (t - 1);\r\n  let factor4 = factorTimes2 * (3 - 2 * t);\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function bezier(out, a, b, c, d, t) {\r\n  let inverseFactor = 1 - t;\r\n  let inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n  let factorTimes2 = t * t;\r\n  let factor1 = inverseFactorTimesTwo * inverseFactor;\r\n  let factor2 = 3 * t * inverseFactorTimesTwo;\r\n  let factor3 = 3 * factorTimes2 * inverseFactor;\r\n  let factor4 = factorTimes2 * t;\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  let r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  let z = (glMatrix.RANDOM() * 2.0) - 1.0;\r\n  let zScale = Math.sqrt(1.0-z*z) * scale;\r\n\r\n  out[0] = Math.cos(r) * zScale;\r\n  out[1] = Math.sin(r) * zScale;\r\n  out[2] = z * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  let x = a[0], y = a[1], z = a[2];\r\n  let w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n  w = w || 1.0;\r\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  let x = a[0], y = a[1], z = a[2];\r\n  out[0] = x * m[0] + y * m[3] + z * m[6];\r\n  out[1] = x * m[1] + y * m[4] + z * m[7];\r\n  out[2] = x * m[2] + y * m[5] + z * m[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a quat\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\r\n\r\n  let x = a[0], y = a[1], z = a[2];\r\n  let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\r\n\r\n  // calculate quat * vec\r\n  let ix = qw * x + qy * z - qz * y;\r\n  let iy = qw * y + qz * x - qx * z;\r\n  let iz = qw * z + qx * y - qy * x;\r\n  let iw = -qx * x - qy * y - qz * z;\r\n\r\n  // calculate result * inverse quat\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateX(out, a, b, c){\r\n  let p = [], r=[];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0];\r\n  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\r\n  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateY(out, a, b, c){\r\n  let p = [], r=[];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\r\n  r[1] = p[1];\r\n  r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateZ(out, a, b, c){\r\n  let p = [], r=[];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\r\n  r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\r\n  r[2] = p[2];\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  let tempA = fromValues(a[0], a[1], a[2]);\r\n  let tempB = fromValues(b[0], b[1], b[2]);\r\n\r\n  normalize(tempA, tempA);\r\n  normalize(tempB, tempB);\r\n\r\n  let cosine = dot(tempA, tempB);\r\n\r\n  if(cosine > 1.0) {\r\n    return 0;\r\n  }\r\n  else if(cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  let a0 = a[0], a1 = a[1], a2 = a[2];\r\n  let b0 = b[0], b1 = b[1], b2 = b[2];\r\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\r\nexport const sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\r\nexport const mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\r\nexport const div = divide;\r\n\r\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\r\nexport const dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\r\nexport const sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\r\nexport const len = length;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\r\nexport const sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport const forEach = (function() {\r\n  let vec = create();\r\n\r\n  return function(a, stride, offset, count, fn, arg) {\r\n    let i, l;\r\n    if(!stride) {\r\n      stride = 3;\r\n    }\r\n\r\n    if(!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if(count) {\r\n      l = Math.min((count * stride) + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for(i = offset; i < l; i += stride) {\r\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\r\n    }\r\n\r\n    return a;\r\n  };\r\n})();\r\n","import * as vec3 from \"../../gl-matrix/src/gl-matrix/vec3.js\";\r\n\r\nexport default class Vector3 extends Float32Array {\r\n  constructor(array = [0, 0, 0]) {\r\n    super(array);\r\n    return this;\r\n  }\r\n\r\n  get x() {\r\n    return this[0];\r\n  }\r\n\r\n  set x(value) {\r\n    this[0] = value;\r\n  }\r\n\r\n  get y() {\r\n    return this[1];\r\n  }\r\n\r\n  set y(value) {\r\n    this[1] = value;\r\n  }\r\n\r\n  get z() {\r\n    return this[2];\r\n  }\r\n\r\n  set z(value) {\r\n    this[2] = value;\r\n  }\r\n\r\n  set(x, y, z) {\r\n    vec3.set(this, x, y, z);\r\n    return this;\r\n  }\r\n\r\n  copy(vector3) {\r\n    vec3.copy(this, vector3);\r\n    return this;\r\n  }\r\n\r\n  add(vector3) {\r\n    vec3.add(this, this, vector3);\r\n    return this;\r\n  }\r\n\r\n  get size() {\r\n    return vec3.length(this);\r\n  }\r\n\r\n  get squaredSize() {\r\n    return vec3.squaredLength(this);\r\n  }\r\n\r\n  distance(vector3) {\r\n    return vec3.distance(this, vector3);\r\n  }\r\n\r\n  subtract(vector3) {\r\n    vec3.subtract(this, this, vector3);\r\n    return this;\r\n  }\r\n\r\n  negate(vector3 = this) {\r\n    vec3.negate(this, vector3);\r\n    return this;\r\n  }\r\n\r\n  cross(vector3a, vector3b) {\r\n    vec3.cross(this, vector3a, vector3b);\r\n    return this;\r\n  }\r\n\r\n  scale(value) {\r\n    vec3.scale(this, this, value);\r\n    return this;\r\n  }\r\n\r\n  normalize() {\r\n    vec3.normalize(this, this);\r\n    return this;\r\n  }\r\n\r\n  dot(vector3) {\r\n    return vec3.dot(this, vector3);\r\n  }\r\n\r\n  equals(vector3) {\r\n    return vec3.exactEquals(this, vector3);\r\n  }\r\n\r\n  applyMatrix4(matrix4) {\r\n    vec3.transformMat4(this, this, matrix4);\r\n    return this;\r\n  }\r\n\r\n  angle(vector3) {\r\n    return vec3.angle(this, vector3);\r\n  }\r\n\r\n  clone() {\r\n    return new Vector3(this.x, this.y, this.z);\r\n  }\r\n}\r\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE. */\r\n\r\nimport * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function create() {\r\n  let out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function clone(a) {\r\n  let out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function fromValues(x, y, z, w) {\r\n  let out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\nexport function set(out, x, y, z, w) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  out[3] = a[3] * b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  out[3] = a[3] / b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  out[3] = Math.ceil(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  out[3] = Math.floor(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  out[3] = Math.min(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  out[3] = Math.max(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  out[3] = Math.round(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + (b[0] * scale);\r\n  out[1] = a[1] + (b[1] * scale);\r\n  out[2] = a[2] + (b[2] * scale);\r\n  out[3] = a[3] + (b[3] * scale);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  let x = b[0] - a[0];\r\n  let y = b[1] - a[1];\r\n  let z = b[2] - a[2];\r\n  let w = b[3] - a[3];\r\n  return Math.sqrt(x*x + y*y + z*z + w*w);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  let x = b[0] - a[0];\r\n  let y = b[1] - a[1];\r\n  let z = b[2] - a[2];\r\n  let w = b[3] - a[3];\r\n  return x*x + y*y + z*z + w*w;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  let x = a[0];\r\n  let y = a[1];\r\n  let z = a[2];\r\n  let w = a[3];\r\n  return Math.sqrt(x*x + y*y + z*z + w*w);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  let x = a[0];\r\n  let y = a[1];\r\n  let z = a[2];\r\n  let w = a[3];\r\n  return x*x + y*y + z*z + w*w;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = -a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  out[3] = 1.0 / a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\nexport function normalize(out, a) {\r\n  let x = a[0];\r\n  let y = a[1];\r\n  let z = a[2];\r\n  let w = a[3];\r\n  let len = x*x + y*y + z*z + w*w;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = x * len;\r\n    out[1] = y * len;\r\n    out[2] = z * len;\r\n    out[3] = w * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount between the two inputs\r\n * @returns {vec4} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  let ax = a[0];\r\n  let ay = a[1];\r\n  let az = a[2];\r\n  let aw = a[3];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  out[3] = aw + t * (b[3] - aw);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\r\nexport function random(out, vectorScale) {\r\n  vectorScale = vectorScale || 1.0;\r\n\r\n  //TODO: This is a pretty awful way of doing this. Find something better.\r\n  out[0] = glMatrix.RANDOM();\r\n  out[1] = glMatrix.RANDOM();\r\n  out[2] = glMatrix.RANDOM();\r\n  out[3] = glMatrix.RANDOM();\r\n  normalize(out, out);\r\n  scale(out, out, vectorScale);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  let x = a[0], y = a[1], z = a[2], w = a[3];\r\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  let x = a[0], y = a[1], z = a[2];\r\n  let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\r\n\r\n  // calculate quat * vec\r\n  let ix = qw * x + qy * z - qz * y;\r\n  let iy = qw * y + qz * x - qx * z;\r\n  let iz = qw * z + qx * y - qy * x;\r\n  let iw = -qx * x - qy * y - qz * z;\r\n\r\n  // calculate result * inverse quat\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\r\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\r\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\r\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\r\nexport const sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\r\nexport const mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\r\nexport const div = divide;\r\n\r\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\r\nexport const dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\r\nexport const sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\r\nexport const len = length;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\r\nexport const sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport const forEach = (function() {\r\n  let vec = create();\r\n\r\n  return function(a, stride, offset, count, fn, arg) {\r\n    let i, l;\r\n    if(!stride) {\r\n      stride = 4;\r\n    }\r\n\r\n    if(!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if(count) {\r\n      l = Math.min((count * stride) + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for(i = offset; i < l; i += stride) {\r\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\r\n    }\r\n\r\n    return a;\r\n  };\r\n})();\r\n","import * as vec4 from \"../../gl-matrix/src/gl-matrix/vec4.js\";\r\n\r\nexport default class Vector4 extends Float32Array {\r\n  constructor(array = [0, 0, 0, 0]) {\r\n    super(array);\r\n    return this;\r\n  }\r\n\r\n  get x() {\r\n    return this[0];\r\n  }\r\n\r\n  set x(value) {\r\n    this[0] = value;\r\n  }\r\n\r\n  get y() {\r\n    return this[1];\r\n  }\r\n\r\n  set y(value) {\r\n    this[1] = value;\r\n  }\r\n\r\n  get z() {\r\n    return this[2];\r\n  }\r\n\r\n  set z(value) {\r\n    this[2] = value;\r\n  }\r\n\r\n  get w() {\r\n    return this[3];\r\n  }\r\n\r\n  set w(value) {\r\n    this[3] = value;\r\n  }\r\n\r\n  set(x, y, z, w) {\r\n    vec4.set(this, x, y, z, w);\r\n    return this;\r\n  }\r\n}\r\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE. */\r\n\r\nimport * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\r\n\r\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function create() {\r\n  let out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\nexport function fromMat4(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[4];\r\n  out[4] = a[5];\r\n  out[5] = a[6];\r\n  out[6] = a[8];\r\n  out[7] = a[9];\r\n  out[8] = a[10];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function clone(a) {\r\n  let out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\r\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  let out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\r\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    let a01 = a[1], a02 = a[2], a12 = a[5];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a01;\r\n    out[5] = a[7];\r\n    out[6] = a02;\r\n    out[7] = a12;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a[1];\r\n    out[4] = a[4];\r\n    out[5] = a[7];\r\n    out[6] = a[2];\r\n    out[7] = a[5];\r\n    out[8] = a[8];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function invert(out, a) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2];\r\n  let a10 = a[3], a11 = a[4], a12 = a[5];\r\n  let a20 = a[6], a21 = a[7], a22 = a[8];\r\n\r\n  let b01 = a22 * a11 - a12 * a21;\r\n  let b11 = -a22 * a10 + a12 * a20;\r\n  let b21 = a21 * a10 - a11 * a20;\r\n\r\n  // Calculate the determinant\r\n  let det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function adjoint(out, a) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2];\r\n  let a10 = a[3], a11 = a[4], a12 = a[5];\r\n  let a20 = a[6], a21 = a[7], a22 = a[8];\r\n\r\n  out[0] = (a11 * a22 - a12 * a21);\r\n  out[1] = (a02 * a21 - a01 * a22);\r\n  out[2] = (a01 * a12 - a02 * a11);\r\n  out[3] = (a12 * a20 - a10 * a22);\r\n  out[4] = (a00 * a22 - a02 * a20);\r\n  out[5] = (a02 * a10 - a00 * a12);\r\n  out[6] = (a10 * a21 - a11 * a20);\r\n  out[7] = (a01 * a20 - a00 * a21);\r\n  out[8] = (a00 * a11 - a01 * a10);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2];\r\n  let a10 = a[3], a11 = a[4], a12 = a[5];\r\n  let a20 = a[6], a21 = a[7], a22 = a[8];\r\n\r\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n\r\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2];\r\n  let a10 = a[3], a11 = a[4], a12 = a[5];\r\n  let a20 = a[6], a21 = a[7], a22 = a[8];\r\n\r\n  let b00 = b[0], b01 = b[1], b02 = b[2];\r\n  let b10 = b[3], b11 = b[4], b12 = b[5];\r\n  let b20 = b[6], b21 = b[7], b22 = b[8];\r\n\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\nexport function translate(out, a, v) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2],\r\n    a10 = a[3], a11 = a[4], a12 = a[5],\r\n    a20 = a[6], a21 = a[7], a22 = a[8],\r\n    x = v[0], y = v[1];\r\n\r\n  out[0] = a00;\r\n  out[1] = a01;\r\n  out[2] = a02;\r\n\r\n  out[3] = a10;\r\n  out[4] = a11;\r\n  out[5] = a12;\r\n\r\n  out[6] = x * a00 + y * a10 + a20;\r\n  out[7] = x * a01 + y * a11 + a21;\r\n  out[8] = x * a02 + y * a12 + a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2],\r\n    a10 = a[3], a11 = a[4], a12 = a[5],\r\n    a20 = a[6], a21 = a[7], a22 = a[8],\r\n\r\n    s = Math.sin(rad),\r\n    c = Math.cos(rad);\r\n\r\n  out[0] = c * a00 + s * a10;\r\n  out[1] = c * a01 + s * a11;\r\n  out[2] = c * a02 + s * a12;\r\n\r\n  out[3] = c * a10 - s * a00;\r\n  out[4] = c * a11 - s * a01;\r\n  out[5] = c * a12 - s * a02;\r\n\r\n  out[6] = a20;\r\n  out[7] = a21;\r\n  out[8] = a22;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  let x = v[0], y = v[1];\r\n\r\n  out[0] = x * a[0];\r\n  out[1] = x * a[1];\r\n  out[2] = x * a[2];\r\n\r\n  out[3] = y * a[3];\r\n  out[4] = y * a[4];\r\n  out[5] = y * a[5];\r\n\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = v[0];\r\n  out[7] = v[1];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  let s = Math.sin(rad), c = Math.cos(rad);\r\n\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n\r\n  out[3] = -s;\r\n  out[4] = c;\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n\r\n  out[3] = 0;\r\n  out[4] = v[1];\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\r\nexport function fromMat2d(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = 0;\r\n\r\n  out[3] = a[2];\r\n  out[4] = a[3];\r\n  out[5] = 0;\r\n\r\n  out[6] = a[4];\r\n  out[7] = a[5];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function fromQuat(out, q) {\r\n  let x = q[0], y = q[1], z = q[2], w = q[3];\r\n  let x2 = x + x;\r\n  let y2 = y + y;\r\n  let z2 = z + z;\r\n\r\n  let xx = x * x2;\r\n  let yx = y * x2;\r\n  let yy = y * y2;\r\n  let zx = z * x2;\r\n  let zy = z * y2;\r\n  let zz = z * z2;\r\n  let wx = w * x2;\r\n  let wy = w * y2;\r\n  let wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[3] = yx - wz;\r\n  out[6] = zx + wy;\r\n\r\n  out[1] = yx + wz;\r\n  out[4] = 1 - xx - zz;\r\n  out[7] = zy - wx;\r\n\r\n  out[2] = zx - wy;\r\n  out[5] = zy + wx;\r\n  out[8] = 1 - xx - yy;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function normalFromMat4(out, a) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\r\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\r\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\r\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n  let b00 = a00 * a11 - a01 * a10;\r\n  let b01 = a00 * a12 - a02 * a10;\r\n  let b02 = a00 * a13 - a03 * a10;\r\n  let b03 = a01 * a12 - a02 * a11;\r\n  let b04 = a01 * a13 - a03 * a11;\r\n  let b05 = a02 * a13 - a03 * a12;\r\n  let b06 = a20 * a31 - a21 * a30;\r\n  let b07 = a20 * a32 - a22 * a30;\r\n  let b08 = a20 * a33 - a23 * a30;\r\n  let b09 = a21 * a32 - a22 * a31;\r\n  let b10 = a21 * a33 - a23 * a31;\r\n  let b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\nexport function projection(out, width, height) {\r\n    out[0] = 2 / width;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = -2 / height;\r\n    out[5] = 0;\r\n    out[6] = -1;\r\n    out[7] = 1;\r\n    out[8] = 1;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\r\n          a[3] + ', ' + a[4] + ', ' + a[5] + ', ' +\r\n          a[6] + ', ' + a[7] + ', ' + a[8] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\r\n}\r\n\r\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  return out;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + (b[0] * scale);\r\n  out[1] = a[1] + (b[1] * scale);\r\n  out[2] = a[2] + (b[2] * scale);\r\n  out[3] = a[3] + (b[3] * scale);\r\n  out[4] = a[4] + (b[4] * scale);\r\n  out[5] = a[5] + (b[5] * scale);\r\n  out[6] = a[6] + (b[6] * scale);\r\n  out[7] = a[7] + (b[7] * scale);\r\n  out[8] = a[8] + (b[8] * scale);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] &&\r\n         a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&\r\n         a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\r\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8];\r\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\r\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\r\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\r\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\r\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\r\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\r\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\r\nexport const mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\r\nexport const sub = subtract;\r\n","import * as mat3 from \"../../gl-matrix/src/gl-matrix/mat3.js\";\r\n\r\nexport default class Matrix3 extends Float32Array {\r\n  constructor(array = [1, 0, 0, 0, 1, 0, 0, 0, 1]) {\r\n    super(array);\r\n    return this;\r\n  }\r\n\r\n  set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n    mat3.set(this, m00, m01, m02, m10, m11, m12, m20, m21, m22);\r\n    return this;\r\n  }\r\n\r\n  translate(vector2, matrix3 = this) {\r\n    mat3.translate(this, matrix3, vector2);\r\n    return this;\r\n  }\r\n\r\n  rotate(value, matrix3 = this) {\r\n    mat3.rotate(this, matrix3, value);\r\n    return this;\r\n  }\r\n\r\n  scale(vector2, matrix3 = this) {\r\n    mat3.scale(this, matrix3, vector2);\r\n    return this;\r\n  }\r\n\r\n  multiply(matrix3a, matrix3b) {\r\n    if (matrix3b) {\r\n      mat3.multiply(this, matrix3a, matrix3b);\r\n    } else {\r\n      mat3.multiply(this, this, matrix3a);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  identity() {\r\n    mat3.identity(this);\r\n    return this;\r\n  }\r\n\r\n  copy(matrix3) {\r\n    mat3.copy(this, matrix3);\r\n    return this;\r\n  }\r\n\r\n  fromMatrix4(matrix4) {\r\n    mat3.fromMat4(this, matrix4);\r\n    return this;\r\n  }\r\n\r\n  fromQuaternion(quaternion) {\r\n    mat3.fromQuat(this, quaternion);\r\n    return this;\r\n  }\r\n\r\n  fromBasis(vector3a, vector3b, vector3c) {\r\n    this.set(\r\n      vector3a[0],\r\n      vector3a[1],\r\n      vector3a[2],\r\n      vector3b[0],\r\n      vector3b[1],\r\n      vector3b[2],\r\n      vector3c[0],\r\n      vector3c[1],\r\n      vector3c[2]\r\n    );\r\n    return this;\r\n  }\r\n\r\n  invert(matrix3 = this) {\r\n    mat3.invert(this, matrix3);\r\n    return this;\r\n  }\r\n}\r\n","export default class Shader {\n  static add(string = \"void main() {}\", chunks) {\n    function regExpFromKey(key) {\n      let regExpString = key instanceof RegExp ? key.source : key.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\");\n      return new RegExp(`(${regExpString})`);\n    }\n\n    for (let [key, chunk] of chunks) {\n      switch (key) {\n        case \"start\":\n          string = string.replace(/(#version .*?\\n(\\s*precision highp float;\\s)?)([\\s\\S]*)/, `$1\\n${chunk}\\n$3`);\n          break;\n        case \"end\":\n          string = string.replace(/(}\\s*$)/, `\\n${chunk}\\n$1`);\n          break;\n        case \"main\":\n          string = string.replace(/(\\bvoid\\b +\\bmain\\b[\\s\\S]*?{\\s*)/, `$1\\n${chunk}\\n`);\n          break;\n        default:\n          string = string.replace(key, chunk)\n      }\n    }\n\n    return string;\n  }\n\n  constructor({vertexShader = `#version 300 es\n    void main() {\n      gl_Position = vec4(0., 0., 0., 1.);\n    }\n  `, fragmentShader = `#version 300 es\n    precision highp float;\n\n    out vec4 fragColor;\n\n    void main() {\n      fragColor = vec4(1.);\n    }\n  `, uniforms = [], vertexShaderChunks = [], fragmentShaderChunks = [], shaders = []} = {}) {\n    this.uniforms = new Map();\n    this.uniformTypes = new Map();\n\n    this.vertexShader = vertexShader;\n    this.fragmentShader = fragmentShader;\n    this._vertexShaderChunks = [];\n    this._fragmentShaderChunks = [];\n\n    this.add({vertexShaderChunks, fragmentShaderChunks, uniforms});\n    \n    for (let shader of shaders) {\n      this.add(shader);\n    }\n  }\n\n  add({vertexShaderChunks = [], fragmentShaderChunks = [], uniforms = []} = {}) {\n    this.vertexShader = Shader.add(this.vertexShader, vertexShaderChunks);\n    this._vertexShaderChunks.push(...vertexShaderChunks);\n    this.fragmentShader = Shader.add(this.fragmentShader, fragmentShaderChunks);\n    this._fragmentShaderChunks.push(...fragmentShaderChunks);\n    for (let [key, value] of uniforms) {\n      this.uniforms.set(key, value);\n    }\n  }\n\n  set vertexShader(value) {\n    this._vertexShader = value;\n    this._parseUniforms(this._vertexShader);\n  }\n\n  get vertexShader() {\n    return this._vertexShader;\n  }\n\n  set fragmentShader(value) {\n    this._fragmentShader = value;\n    this._parseUniforms(this._fragmentShader);\n  }\n\n  get fragmentShader() {\n    return this._fragmentShader;\n  }\n\n  get vertexShaderChunks() {\n    return this._vertexShaderChunks;\n  }\n\n  get fragmentShaderChunks() {\n    return this._fragmentShaderChunks;\n  }\n\n  /**\n   * Parse shader strings to extract uniforms\n   */\n  _parseUniforms(string, classes) {\n    classes = Object.assign({\n      Vector2: class Vector2 extends Float32Array {constructor() {super(2)}},\n      Vector3: class Vector3 extends Float32Array {constructor() {super(3)}},\n      Vector4: class Vector4 extends Float32Array {constructor() {super(4)}},\n      Matrix3: class Matrix3 extends Float32Array {constructor() {super([1, 0, 0, 0, 1, 0, 0, 0, 1])}},\n      Matrix4: class Matrix3 extends Float32Array {constructor() {super([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1])}},\n      Texture: class Texture {},\n      TextureCube: class TextureCube {}\n    }, classes);\n\n    let regExp = /^\\s*uniform (.[^ ]+) (.[^ ;\\[\\]]+)\\[? *(\\d+)? *\\]?/gm;\n\n    let match;\n\n    while ((match = regExp.exec(string))) {\n      let [, glslType, variableName, lengthStr] = match;\n      let length = parseInt(lengthStr);\n\n      if (this.uniforms.has(variableName)) {\n        continue;\n      }\n\n      let value;\n      let typeMatch;\n\n      this.uniformTypes.set(variableName, glslType);\n\n      if (/float|double/.test(glslType)) {\n        if (isNaN(length)) {\n          value = 0;\n        } else {\n          value = new Array(length).fill(0);\n        }\n      } else if (/int|uint/.test(glslType)) {\n        if (isNaN(length)) {\n          value = 0;\n        } else {\n          value = new Array(length).fill(0);\n        }\n      } else if (/sampler2D/.test(glslType)) {\n        if (isNaN(length)) {\n          value = new classes.Texture();\n        } else {\n          value = new Array(length).fill().map(value => new classes.Texture());\n        }\n      } else if (/samplerCube/.test(glslType)) {\n        if (isNaN(length)) {\n          value = new classes.TextureCube();\n        } else {\n          value = new Array(length).fill().map(value => new classes.TextureCube());\n        }\n      } else if( (typeMatch = /(.?)vec(\\d)/.exec(glslType)) ) {\n        let vectorLength = typeMatch[2];\n        if (isNaN(length)) {\n          value = new classes[`Vector${vectorLength}`]();\n        } else {\n          value = new Array(length).fill().map(value => new classes[`Vector${vectorLength}`]());\n        }\n      } else if( (typeMatch = /mat(\\d)/.exec(glslType)) ) {\n        let matrixLength = typeMatch[1];\n        if (isNaN(length)) {\n          value = new classes[`Matrix${matrixLength}`]();\n        } else {\n          value = new Array(length).fill().map(value => new classes[`Matrix${matrixLength}`]());\n        }\n      } else {\n        value = undefined;\n      }\n\n      this.uniforms.set(variableName, value);\n    }\n  }\n}\n","export default class GLTexture {\n  constructor({\n    gl, \n    data = undefined, \n    width = undefined,\n    height = undefined,\n    target = (data && data.length) ? gl.TEXTURE_CUBE_MAP : gl.TEXTURE_2D,\n    level = 0,\n    internalFormat = gl.RGBA8 || gl.RGBA,\n    format = gl.RGBA,\n    type = gl.UNSIGNED_BYTE,\n    minFilter = gl.NEAREST_MIPMAP_LINEAR, \n    magFilter = gl.LINEAR, \n    wrapS = gl.REPEAT, \n    wrapT = gl.REPEAT\n  } = {gl}) {\n    this.gl = gl;\n    this._texture = this.gl.createTexture();\n    this._width = width;\n    this._height = height;\n    this._dataWidth = undefined;\n    this._dataHeight = undefined;\n    this._target = target;\n    \n    this.level = level;\n    this.internalFormat = internalFormat;\n    this.format = format;\n    this.type = type;\n    this.minFilter = minFilter;\n    this.magFilter = magFilter;\n    this.wrapS = wrapS;\n    this.wrapT = wrapT;\n    this.data = data;\n  }\n\n  generateMipmap() {\n    this.bind();\n    this.gl.generateMipmap(this._target);\n    this.unbind();\n  }\n\n  set data(value) {\n    this._data = value;\n\n    if(!this._data && !(this._width && this._height)) {\n      return;\n    }\n\n    const data = (this._data && this._data.length) ? this._data : [this._data];\n\n    if(data[0]) {\n      this._dataWidth = data[0].width || data[0].videoWidth;\n      this._dataHeight = data[0].height || data[0].videoHeight;\n    }\n\n    const count = this._target === this.gl.TEXTURE_CUBE_MAP ? 6 : 1;\n    const target = this._target === this.gl.TEXTURE_CUBE_MAP ? this.gl.TEXTURE_CUBE_MAP_POSITIVE_X : this._target;\n\n    this.bind();\n    for (let i = 0; i < data.length; i++) {\n      if(this.gl.getParameter(this.gl.VERSION).startsWith(\"WebGL 1.0\") && this._dataWidth) {\n        this.gl.texImage2D(target + i, this.level, this.internalFormat, this.format, this.type, data[i]);\n      } else {\n        this.gl.texImage2D(target + i, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, data[i]);\n      }\n    }\n    this.unbind();\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  set width(value) {\n    this._width = value;\n    this.data = this.data;\n  }\n\n  get width() {\n    return this._width || this._dataWidth;\n  }\n\n  set height(value) {\n    this._height = value;\n    this.data = this.data;\n  }\n\n  get height() {\n    return this._height || this._dataHeight;\n  }\n\n  set minFilter(value) {\n    if(this._minFilter === value) {\n      return;\n    }\n    this._minFilter = value;\n    this.bind();\n    this.gl.texParameteri(this._target, this.gl.TEXTURE_MIN_FILTER, this._minFilter);\n    this.unbind();\n  }\n\n  get minFilter() {\n    return this._minFilter;\n  }\n\n  set magFilter(value) {\n    if(this._magFilter === value) {\n      return;\n    }\n    this._magFilter = value;\n    this.bind();\n    this.gl.texParameteri(this._target, this.gl.TEXTURE_MAG_FILTER, this._magFilter);\n    this.unbind();\n  }\n\n  get magFilter() {\n    return this._magFilter;\n  }\n\n  set wrapS(value) {\n    if(this._wrapS === value) {\n      return;\n    }\n    this._wrapS = value;\n    this.bind();\n    this.gl.texParameteri(this._target, this.gl.TEXTURE_WRAP_S, this._wrapS);\n    this.unbind();\n  }\n\n  get wrapS() {\n    return this._wrapS;\n  }\n\n  set wrapT(value) {\n    if(this._wrapT === value) {\n      return;\n    }\n    this._wrapT = value;\n    this.bind();\n    this.gl.texParameteri(this._target, this.gl.TEXTURE_WRAP_T, this._wrapT);\n    this.unbind();\n  }\n\n  get wrapT() {\n    return this._wrapT;\n  }\n\n  bind({unit = 0} = {}) {\n    this.gl.activeTexture(this.gl.TEXTURE0 + unit);\n    this.gl.bindTexture(this._target, this._texture);\n  }\n\n  unbind() {\n    this.gl.bindTexture(this._target, null);\n  }\n};\n","import Vector2 from \"../math/Vector2.js\";\nimport Vector3 from \"../math/Vector3.js\";\nimport Vector4 from \"../math/Vector4.js\";\nimport Matrix3 from \"../math/Matrix3.js\";\nimport Matrix4 from \"../math/Matrix4.js\";\nimport Shader from \"../3d/Shader.js\";\nimport GLTexture from \"./GLTexture.js\";\n\nexport default class GLProgram extends Shader {\n  constructor({\n    gl,\n    vertexShader = undefined,\n    fragmentShader = undefined,\n    uniforms = undefined,\n    attributes = undefined,\n    transformFeedbackVaryings = undefined,\n    vertexShaderChunks = undefined,\n    fragmentShaderChunks = undefined,\n    shaders = undefined\n  } = { gl }) {\n    super({ vertexShader, fragmentShader, uniforms, vertexShaderChunks, fragmentShaderChunks, shaders });\n\n    this.gl = gl;\n    this._program = gl.createProgram();\n    this._attachedShaders = new Map();\n\n    const self = this;\n\n    this._vertexAttribDivisor = function () { };\n    const instancedArraysExtension = this.gl.getExtension(\"ANGLE_instanced_arrays\");\n    if (instancedArraysExtension) {\n      this._vertexAttribDivisor = instancedArraysExtension.vertexAttribDivisorANGLE.bind(instancedArraysExtension);\n    } else if (this.gl.vertexAttribDivisor) {\n      this._vertexAttribDivisor = this.gl.vertexAttribDivisor.bind(this.gl);\n    }\n\n    class Attributes extends Map {\n      set(name, { buffer, location = self._attributesLocations.get(name), size, type = gl.FLOAT, normalized = false, stride = 0, offset = 0, divisor = 0 } = {}) {\n        if (name instanceof Map) {\n          for (let [key, value] of name) {\n            this.set(key, value);\n          }\n          return;\n        }\n        buffer.bind();\n        if (location === undefined) {\n          location = gl.getAttribLocation(self._program, name);\n          if (location === -1) {\n            console.warn(`Attribute \"${name}\" is missing or never used`);\n          }\n          self._attributesLocations.set(name, location);\n        }\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribPointer(location, size, type, normalized, stride, offset);\n        buffer.unbind();\n        self._vertexAttribDivisor(location, divisor);\n        super.set(name, { buffer, size, type, normalized, stride, offset });\n      }\n    }\n\n    class Uniforms extends Map {\n      set(name, ...values) {\n        let value = values[0];\n        if (value === undefined) {\n          return;\n        }\n\n        let location = self._uniformLocations.get(name);\n        if (location === undefined) {\n          location = gl.getUniformLocation(self._program, name);\n          self._uniformLocations.set(name, location);\n        }\n\n        let texture;\n\n        if (value.length === undefined) {\n          if (value instanceof GLTexture) {\n            let unit = 0;\n            for (const [uniformName, type] of self.uniformTypes) {\n              if(type.startsWith(\"sampler\")) {\n                if(uniformName === name) {\n                  texture = value;\n                  values = [unit];\n                  break;\n                }\n                unit++;\n              }\n            }\n          } else if (value instanceof Object) {\n            for (let key in value) {\n              self.uniforms.set(`${name}.${key}`, value[key]);\n            }\n            return;\n          }\n          if (values.length > 1) {\n            value = self.uniforms.get(name);\n            value.set(...values);\n          } else {\n            value = values;\n          }\n        } else if (value[0] instanceof Object) {\n          for (let i = 0; i < value.length; i++) {\n            if (value[0].length) {\n              self.uniforms.set(`${name}[${i}]`, value[i]);\n            } else {\n              for (let key in value[i]) {\n                self.uniforms.set(`${name}[${i}].${key}`, value[i][key]);\n              }\n            }\n          }\n          return;\n        }\n\n        if (location === null) {\n          return;\n        }\n\n        const type = self.uniformTypes.get(name);\n\n        if (type === \"float\") {\n          gl.uniform1fv(location, value);\n        } else if (type === \"vec2\") {\n          gl.uniform2fv(location, value);\n        } else if (type === \"vec3\") {\n          gl.uniform3fv(location, value);\n        } else if (type === \"vec4\") {\n          gl.uniform4fv(location, value);\n        } else if (type === \"int\" || type.startsWith(\"sampler\")) {\n          gl.uniform1iv(location, value);\n        } else if (type === \"ivec2\") {\n          gl.uniform2iv(location, value);\n        } else if (type === \"ivec3\") {\n          gl.uniform3iv(location, value);\n        } else if (type === \"ivec4\") {\n          gl.uniform4iv(location, value);\n        } else if (type === \"mat3\") {\n          gl.uniformMatrix3fv(location, false, value);\n        } else if (type === \"mat4\") {\n          gl.uniformMatrix4fv(location, false, value);\n        }\n\n        super.set(name, texture || value);\n      }\n    }\n\n    if (transformFeedbackVaryings) {\n      this.gl.transformFeedbackVaryings(this._program, transformFeedbackVaryings, gl.INTERLEAVED_ATTRIBS);\n    }\n\n    this.vertexShader = this.vertexShader;\n    this.fragmentShader = this.fragmentShader;\n\n    this.use();\n\n    this.attributes = new Attributes();\n\n    const rawUniforms = this.uniforms;\n    this.uniforms = new Uniforms();\n    for (const [key, value] of rawUniforms) {\n      this.uniforms.set(key, value);\n    }\n  }\n\n  set vertexShader(value) {\n    super.vertexShader = value;\n    if (this.gl) {\n      this._updateShader(this.gl.VERTEX_SHADER, this.vertexShader);\n    }\n  }\n\n  get vertexShader() {\n    return super.vertexShader;\n  }\n\n  set fragmentShader(value) {\n    super.fragmentShader = value;\n    if (this.gl) {\n      this._updateShader(this.gl.FRAGMENT_SHADER, this.fragmentShader);\n    }\n  }\n\n  get fragmentShader() {\n    return super.fragmentShader;\n  }\n\n  use() {\n    this.gl.useProgram(this._program);\n  }\n\n  _updateShader(type, source) {\n    if (!source) {\n      return;\n    }\n\n    if (this.gl.getParameter(this.gl.VERSION).startsWith(\"WebGL 1.0\")) {\n      source = source.replace(/#version.*?\\n/g, \"\");\n      source = source.replace(/\\btexture\\b/g, \"texture2D\");\n      if (type === this.gl.VERTEX_SHADER) {\n        source = source.replace(/\\bin\\b/g, \"attribute\");\n        source = source.replace(/\\bout\\b/g, \"varying\");\n      } else {\n        source = source.replace(/\\bin\\b/g, \"varying\");\n        const results = /out vec4 (.*?);/.exec(source);\n        if (results) {\n          const fragColorName = results[1];\n          source = source.replace(/out.*?;/, \"\");\n          source = source.replace(new RegExp(`\\\\b${fragColorName}\\\\b`, \"g\"), \"gl_FragColor\");\n        }\n      }\n    }\n\n    const shader = this.gl.createShader(type);\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    const shaderInfoLog = this.gl.getShaderInfoLog(shader);\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      const lineNumberResults = /ERROR: 0:(\\d+):/.exec(shaderInfoLog);\n      if (lineNumberResults) {\n        const lineNumber = parseFloat(lineNumberResults[1]);\n        const shaderLines = source.split(\"\\n\");\n        throw new Error(`${shaderInfoLog}\\nat: ${shaderLines[lineNumber - 1].replace(/^\\s*/, \"\")}`);\n      } else {\n        throw new Error(shaderInfoLog);\n      }\n      this.gl.deleteShader(shader);\n      return;\n    } else if (shaderInfoLog) {\n      console.warn(shaderInfoLog);\n    }\n\n    const attachedShader = this._attachedShaders.get(type);\n    if (attachedShader) {\n      this.gl.detachShader(this._program, attachedShader);\n      this.gl.deleteShader(attachedShader);\n    }\n\n    this.gl.attachShader(this._program, shader);\n    this.gl.deleteShader(shader);\n    this._attachedShaders.set(type, shader);\n\n    if (this._attachedShaders.size === 2) {\n      this.gl.linkProgram(this._program);\n      const programInfoLog = this.gl.getProgramInfoLog(this._program);\n      if (!this.gl.getProgramParameter(this._program, this.gl.LINK_STATUS)) {\n        throw new Error(programInfoLog);\n      } else if (programInfoLog) {\n        console.warn(programInfoLog);\n      }\n\n      // TODO: Check when issue is resolved on Safari and comment out\n\n      // for (let [type, attachedShader] of this._attachedShaders) {\n      //   this.gl.detachShader(this._program, attachedShader);\n      //   this.gl.deleteShader(attachedShader);\n      //   this._attachedShaders.delete(type);\n      // }\n\n      this._attributesLocations = new Map();\n      this._uniformLocations = new Map();\n    }\n  }\n\n  _parseUniforms(string) {\n    super._parseUniforms(string, {\n      Vector2,\n      Vector3,\n      Vector4,\n      Matrix3,\n      Matrix4\n    });\n  }\n}\n","export default class GLBuffer {\n  constructor({\n    gl,\n    data = null,\n    target = gl.ARRAY_BUFFER,\n    usage = gl.STATIC_DRAW\n  } = { gl }) {\n    this.gl = gl;\n    this.target = target;\n    this.usage = usage;\n\n    this._buffer = this.gl.createBuffer();\n\n    if (data) {\n      this.data = data;\n    }\n  }\n\n  set data(value) {\n    this._data = value;\n\n    this.bind();\n    this.gl.bufferData(this.target, this._data, this.usage);\n    this.unbind();\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  bind({\n    target = this.target,\n    index = undefined,\n    offset = 0,\n    size = undefined\n  } = {}) {\n    if (index === undefined) {\n      this.gl.bindBuffer(target, this._buffer);\n    } else if (size === undefined) {\n      this.gl.bindBufferBase(target, index, this._buffer);\n    } else {\n      this.gl.bindBufferRange(target, index, this._buffer, offset, size);\n    }\n  }\n\n  unbind({\n    target = this.target,\n    index = undefined,\n    offset = 0,\n    size = undefined\n  } = {}) {\n    if (index === undefined) {\n      this.gl.bindBuffer(target, null);\n    } else if (size === undefined) {\n      this.gl.bindBufferBase(target, index, null);\n    } else {\n      this.gl.bindBufferRange(target, index, null, offset, size);\n    }\n  }\n};\n","import GLBuffer from \"./GLBuffer.js\";\n\nexport default class GLVertexAttribute {\n  constructor({\n    gl,\n    data = undefined,\n    buffer = new GLBuffer({\n      gl\n    }),\n    size = 1,\n    type = undefined,\n    offset = 0,\n    normalized = false,\n    stride = 0,\n    count = undefined,\n    divisor = 0\n  } = { gl }) {\n    this.gl = gl;\n    this.buffer = buffer;\n    this.size = size;\n    this.type = type;\n    this.offset = offset;\n    this.normalized = normalized;\n    this.stride = stride;\n    this.count = count;\n    this.divisor = divisor;\n\n    if (data) {\n      this.data = data;\n    }\n  }\n\n  set count(value) {\n    this._count = value;\n  }\n\n  get count() {\n    return this._count === undefined ? this.data.length / this.size : this._count;\n  }\n\n  set type(value) {\n    this._type = value;\n  }\n\n  get type() {\n    let type = this._type;\n    if (!type) {\n      if (this.data instanceof Float32Array || this.data instanceof Float64Array) {\n        type = this.gl.FLOAT;\n      } else if (this.data instanceof Uint8Array) {\n        type = this.gl.UNSIGNED_BYTE;\n      } else if (this.data instanceof Uint16Array) {\n        type = this.gl.UNSIGNED_SHORT;\n      } else if (this.data instanceof Uint32Array) {\n        type = this.gl.UNSIGNED_INT\n      }\n    }\n    return type;\n  }\n\n  set data(value) {\n    this.buffer.data = value;\n  }\n\n  get data() {\n    return this.buffer.data;\n  }\n};\n","import GLBuffer from \"./GLBuffer.js\";\nimport GLVertexAttribute from \"./GLVertexAttribute.js\";\n\nexport default class GLMesh {\n  constructor({\n    gl,\n    attributes = undefined,\n    indices = undefined\n  } = { gl }) {\n    this.gl = gl;\n\n    this.gl.getExtension(\"OES_element_index_uint\");\n\n    this._drawElementsInstanced = function () { };\n    this._drawArraysInstanced = function () { };\n    const instancedArraysExtension = this.gl.getExtension(\"ANGLE_instanced_arrays\");\n    if (instancedArraysExtension) {\n      this._drawElementsInstanced = instancedArraysExtension.drawElementsInstancedANGLE.bind(instancedArraysExtension);\n      this._drawArraysInstanced = instancedArraysExtension.drawArraysInstancedANGLE.bind(instancedArraysExtension);\n    } else if (this.gl.drawElementsInstanced) {\n      this._drawElementsInstanced = this.gl.drawElementsInstanced.bind(this.gl);\n      this._drawArraysInstanced = this.gl.drawArraysInstanced.bind(this.gl);\n    }\n    \n    this.attributes = new Map(attributes);\n    for (const [key, value] of this.attributes) {\n      if(!(value instanceof GLVertexAttribute)) {\n        this.attributes.set(key, new GLVertexAttribute(Object.assign({\n          gl\n        }, value)));\n      }\n    }\n\n    if (indices && !(this.indices instanceof GLVertexAttribute)) {\n      this.indices = new GLVertexAttribute(Object.assign({\n        gl: this.gl,\n        buffer: new GLBuffer({\n          gl: this.gl,\n          target: this.gl.ELEMENT_ARRAY_BUFFER\n        })\n      }, indices.length !== undefined ? {data: indices} : indices));\n    }\n  }\n\n  draw({\n    mode = this.gl.TRIANGLES,\n    elements = !!this.indices,\n    count = elements ? this.indices.count : this.attributes.get(\"position\").count,\n    offset = this.indices ? this.indices.offset : 0,\n    type = elements ? this.indices.type : null,\n    first = 0,\n    instanceCount = undefined\n  } = {}) {\n    if (elements) {\n      if (instanceCount !== undefined) {\n        this._drawElementsInstanced(mode, count, type, offset, instanceCount);\n      } else {\n        this.gl.drawElements(mode, count, type, offset);\n      }\n    } else {\n      if (instanceCount !== undefined) {\n        this._drawArraysInstanced(mode, first, count, instanceCount);\n      } else {\n        this.gl.drawArrays(mode, first, count);\n      }\n    }\n  }\n};\n","import Matrix4 from \"../math/Matrix4.js\";\n\nexport default class Camera {\n  constructor({ near = 0.01, far = 1000, aspectRatio = 1, fov = Math.PI / 3 } = {}) {\n    this._near = near;\n    this._far = far;\n    this._aspectRatio = aspectRatio;\n    this._fov = fov;\n\n    this.transform = new Matrix4();\n    this._inverseTransform = new Matrix4();\n    this._projection = new Matrix4();\n    this._projectionView = new Matrix4();\n\n    this._updateProjection();\n  }\n\n  set near(value) {\n    this._near = value;\n    this._updateProjection();\n  }\n\n  get near() {\n    return this._near;\n  }\n\n  set far(value) {\n    this._far = value;\n    this._updateProjection();\n  }\n\n  get far() {\n    return this._far;\n  }\n\n  set fov(value) {\n    this._fov = value;\n    this._updateProjection();\n  }\n\n  get fov() {\n    return this._fov;\n  }\n\n  set aspectRatio(value) {\n    this._aspectRatio = value;\n    this._updateProjection();\n  }\n\n  get aspectRatio() {\n    return this._aspectRatio;\n  }\n\n  get inverseTransform() {\n    return this._inverseTransform.invert(this.transform);\n  }\n\n  get projection() {\n    return this._projection;\n  }\n\n  get projectionView() {\n    return this._projectionView.copy(this.projection).multiply(this.inverseTransform);\n  }\n\n  _updateProjection() {\n    this._projection.fromPerspective(this);\n  }\n}\n\nObject.defineProperty(Camera.prototype, \"near\", { enumerable: true });\nObject.defineProperty(Camera.prototype, \"far\", { enumerable: true });\nObject.defineProperty(Camera.prototype, \"fov\", { enumerable: true });\nObject.defineProperty(Camera.prototype, \"aspectRatio\", { enumerable: true });\nObject.defineProperty(Camera.prototype, \"inverseTransform\", { enumerable: true });\nObject.defineProperty(Camera.prototype, \"projection\", { enumerable: true });\nObject.defineProperty(Camera.prototype, \"projectionView\", { enumerable: true });","import Vector2 from \"../math/Vector2.js\";\nimport Signal from \"../utils/Signal.js\";\nimport Ticker from \"../utils/Ticker.js\";\n\nlet pointers = new Map();\n\nexport default class Pointer extends Vector2 {\n  static get TOUCH_TYPE() {\n    return \"touchtype\";\n  }\n\n  static get MOUSE_TYPE() {\n    return \"mousetype\";\n  }\n\n  static get(domElement = document.body) {\n    let pointer = pointers.get(domElement);\n    if (!pointer) {\n      pointer = new Pointer(domElement);\n    }\n    return pointer;\n  }\n\n  get downed() {\n    return this._downed;\n  }\n\n  constructor(domElement = document.body) {\n    super();\n\n    this.domElement = domElement;\n\n    this.type = Pointer.TOUCH_TYPE;\n\n    this.velocity = new Vector2();\n    this.dragOffset = new Vector2();\n\n    this.centered = new Vector2();\n    this.centeredFlippedY = new Vector2();\n    this.normalized = new Vector2();\n    this.normalizedFlippedY = new Vector2();\n    this.normalizedCentered = new Vector2();\n    this.normalizedCenteredFlippedY = new Vector2();\n\n    this._downed = false;\n\n    pointers.set(this.domElement, this);\n\n    this.onDown = new Signal();\n    this.onMove = new Signal();\n    this.onUp = new Signal();\n    this.onClick = new Signal();\n    this.onTypeChange = new Signal();\n\n    this._preventMouseTypeChange = false;\n\n    this._onPointerMoveBinded = this._onPointerMove.bind(this);\n    this._onPointerDownBinded = this._onPointerDown.bind(this);\n    this._onPointerUpBinded = this._onPointerUp.bind(this);\n\n    this._updateBinded = this._update.bind(this);\n    this._resizeBinded = this.resize.bind(this);\n\n    this.resize();\n\n    this._position = new Vector2();\n\n    this.enable();\n  }\n\n  resize() {\n    this._domElementBoundingRect = this.domElement.getBoundingClientRect();\n  }\n\n  _onPointerDown(e) {\n    if(e.type === \"touchstart\") {\n      this._preventMouseTypeChange = true;\n      this._changeType(Pointer.TOUCH_TYPE);\n    }\n    this._downed = true;\n    this.dragOffset.set(0, 0);\n    this.copy(this._position);\n    this._onPointerEvent(e);\n    this._updatePositions();\n    this.onDown.dispatch(e);\n  }\n\n  _onPointerMove(e) {\n    if(e.type === \"mousemove\") {\n      if(this._preventMouseTypeChange) {\n        return;\n      } else {\n        this._changeType(Pointer.MOUSE_TYPE);\n      }\n    }\n    this._onPointerEvent(e);\n    this.onMove.dispatch(e);\n  }\n\n  _onPointerUp(e) {\n    this._downed = false;\n    this._onPointerEvent(e);\n    this._updatePositions();\n    this.onUp.dispatch(e);\n    if(this.dragOffset.length < 4) {\n      this.onClick.dispatch(e);\n    }\n    clearTimeout(this._timeout);\n    this._timeout = setTimeout(() => {\n      this._preventMouseTypeChange = false;\n    }, 2000);\n  }\n\n  _onPointerEvent(e) {\n    if (!!TouchEvent && e instanceof TouchEvent) {\n      if(e.type === \"touchend\") {\n        e = e.changedTouches[0];\n      } else {\n        e = e.touches[0];\n      }\n    }\n    this._position.x = e.clientX - this._domElementBoundingRect.left;\n    this._position.y = e.clientY - this._domElementBoundingRect.top;\n  }\n\n  _changeType(type) {\n    if(this.type === type) {\n      return;\n    }\n    this.type = type;\n    this.disable();\n    this.enable();\n    this.onTypeChange.dispatch(this.type);\n  }\n\n  _update() {\n    if(this.x || this.y) {\n      this.velocity.x = this._position.x - this.x;\n      this.velocity.y = this._position.y - this.y;\n      if(this.downed) {\n        this.dragOffset.add(this.velocity);\n      }\n    }\n\n    this._updatePositions();\n  }\n\n  _updatePositions() {\n    this.x = this._position.x;\n    this.y = this._position.y;\n\n    if(!this.x && !this.y) {\n      return;\n    }\n\n    this.centered.x = this.centeredFlippedY.x = this.x - this._domElementBoundingRect.width * .5;\n    this.centered.y = this.centeredFlippedY.y = this.y - this._domElementBoundingRect.height * .5;\n    this.centeredFlippedY.y *= -1;\n\n    this.normalized.x = this.normalizedFlippedY.x = this.x / this._domElementBoundingRect.width;\n    this.normalized.y = this.normalizedFlippedY.y = this.y / this._domElementBoundingRect.height;\n    this.normalizedFlippedY.y = 1 - this.normalizedFlippedY.y;\n\n    this.normalizedCentered.x = this.normalizedCenteredFlippedY.x = this.normalized.x * 2 - 1;\n    this.normalizedCentered.y = this.normalizedCenteredFlippedY.y = this.normalized.y * 2 - 1;\n    this.normalizedCenteredFlippedY.y *= -1;\n  }\n\n  enable() {\n    this.disable();\n    this.resize();\n    if(this.type === Pointer.TOUCH_TYPE) {\n      this.domElement.addEventListener(\"touchmove\", this._onPointerMoveBinded);\n      window.addEventListener(\"touchend\", this._onPointerUpBinded);\n    }\n    else {\n      this.domElement.addEventListener(\"mousedown\", this._onPointerDownBinded);\n      window.addEventListener(\"mouseup\", this._onPointerUpBinded);\n    }\n    this.domElement.addEventListener(\"touchstart\", this._onPointerDownBinded);\n    this.domElement.addEventListener(\"mousemove\", this._onPointerMoveBinded);\n    window.addEventListener(\"resize\", this._resizeBinded);\n    Ticker.add(this._updateBinded = this._updateBinded || this._update.bind(this));\n  }\n\n  disable() {\n    Ticker.delete(this._updateBinded);\n    this.domElement.removeEventListener(\"touchstart\", this._onPointerDownBinded);\n    this.domElement.removeEventListener(\"mousedown\", this._onPointerDownBinded);\n    this.domElement.removeEventListener(\"touchmove\", this._onPointerMoveBinded);\n    this.domElement.removeEventListener(\"mousemove\", this._onPointerMoveBinded);\n    window.removeEventListener(\"touchend\", this._onPointerUpBinded);\n    window.removeEventListener(\"mouseup\", this._onPointerUpBinded);\n    window.removeEventListener(\"resize\", this._resizeBinded);\n  }\n}\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE. */\r\n\r\nimport * as glMatrix from \"./common.js\"\r\nimport * as mat3 from \"./mat3.js\"\r\nimport * as vec3 from \"./vec3.js\"\r\nimport * as vec4 from \"./vec4.js\"\r\n\r\n/**\r\n * Quaternion\r\n * @module quat\r\n */\r\n\r\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\r\nexport function create() {\r\n  let out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\nexport function setAxisAngle(out, axis, rad) {\r\n  rad = rad * 0.5;\r\n  let s = Math.sin(rad);\r\n  out[0] = s * axis[0];\r\n  out[1] = s * axis[1];\r\n  out[2] = s * axis[2];\r\n  out[3] = Math.cos(rad);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\r\nexport function getAxisAngle(out_axis, q) {\r\n  let rad = Math.acos(q[3]) * 2.0;\r\n  let s = Math.sin(rad / 2.0);\r\n  if (s != 0.0) {\r\n    out_axis[0] = q[0] / s;\r\n    out_axis[1] = q[1] / s;\r\n    out_axis[2] = q[2] / s;\r\n  } else {\r\n    // If s is zero, return any axis (no rotation - axis does not matter)\r\n    out_axis[0] = 1;\r\n    out_axis[1] = 0;\r\n    out_axis[2] = 0;\r\n  }\r\n  return rad;\r\n}\r\n\r\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\r\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\r\n\r\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\r\n  let bx = Math.sin(rad), bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + aw * bx;\r\n  out[1] = ay * bw + az * bx;\r\n  out[2] = az * bw - ay * bx;\r\n  out[3] = aw * bw - ax * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\r\n  let by = Math.sin(rad), bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw - az * by;\r\n  out[1] = ay * bw + aw * by;\r\n  out[2] = az * bw + ax * by;\r\n  out[3] = aw * bw - ay * by;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\r\n  let bz = Math.sin(rad), bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + ay * bz;\r\n  out[1] = ay * bw - ax * bz;\r\n  out[2] = az * bw + aw * bz;\r\n  out[3] = aw * bw - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\r\nexport function calculateW(out, a) {\r\n  let x = a[0], y = a[1], z = a[2];\r\n\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport function slerp(out, a, b, t) {\r\n  // benchmarks:\r\n  //    http://jsperf.com/quaternion-slerp-implementations\r\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\r\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\r\n\r\n  let omega, cosom, sinom, scale0, scale1;\r\n\r\n  // calc cosine\r\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n  // adjust signs (if necessary)\r\n  if ( cosom < 0.0 ) {\r\n    cosom = -cosom;\r\n    bx = - bx;\r\n    by = - by;\r\n    bz = - bz;\r\n    bw = - bw;\r\n  }\r\n  // calculate coefficients\r\n  if ( (1.0 - cosom) > 0.000001 ) {\r\n    // standard case (slerp)\r\n    omega  = Math.acos(cosom);\r\n    sinom  = Math.sin(omega);\r\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n    scale1 = Math.sin(t * omega) / sinom;\r\n  } else {\r\n    // \"from\" and \"to\" quaternions are very close\r\n    //  ... so we can do a linear interpolation\r\n    scale0 = 1.0 - t;\r\n    scale1 = t;\r\n  }\r\n  // calculate final values\r\n  out[0] = scale0 * ax + scale1 * bx;\r\n  out[1] = scale0 * ay + scale1 * by;\r\n  out[2] = scale0 * az + scale1 * bz;\r\n  out[3] = scale0 * aw + scale1 * bw;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\nexport function invert(out, a) {\r\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\r\n  let dot = a0*a0 + a1*a1 + a2*a2 + a3*a3;\r\n  let invDot = dot ? 1.0/dot : 0;\r\n\r\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n  out[0] = -a0*invDot;\r\n  out[1] = -a1*invDot;\r\n  out[2] = -a2*invDot;\r\n  out[3] = a3*invDot;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromMat3(out, m) {\r\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n  // article \"Quaternion Calculus and Fast Animation\".\r\n  let fTrace = m[0] + m[4] + m[8];\r\n  let fRoot;\r\n\r\n  if ( fTrace > 0.0 ) {\r\n    // |w| > 1/2, may as well choose w > 1/2\r\n    fRoot = Math.sqrt(fTrace + 1.0);  // 2w\r\n    out[3] = 0.5 * fRoot;\r\n    fRoot = 0.5/fRoot;  // 1/(4w)\r\n    out[0] = (m[5]-m[7])*fRoot;\r\n    out[1] = (m[6]-m[2])*fRoot;\r\n    out[2] = (m[1]-m[3])*fRoot;\r\n  } else {\r\n    // |w| <= 1/2\r\n    let i = 0;\r\n    if ( m[4] > m[0] )\r\n      i = 1;\r\n    if ( m[8] > m[i*3+i] )\r\n      i = 2;\r\n    let j = (i+1)%3;\r\n    let k = (i+2)%3;\r\n\r\n    fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\r\n    out[i] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot;\r\n    out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\r\n    out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\r\n    out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromEuler(out, x, y, z) {\r\n    let halfToRad = 0.5 * Math.PI / 180.0;\r\n    x *= halfToRad;\r\n    y *= halfToRad;\r\n    z *= halfToRad;\r\n\r\n    let sx = Math.sin(x);\r\n    let cx = Math.cos(x);\r\n    let sy = Math.sin(y);\r\n    let cy = Math.cos(y);\r\n    let sz = Math.sin(z);\r\n    let cz = Math.cos(z);\r\n\r\n    out[0] = sx * cy * cz - cx * sy * sz;\r\n    out[1] = cx * sy * cz + sx * cy * sz;\r\n    out[2] = cx * cy * sz - sx * sy * cz;\r\n    out[3] = cx * cy * cz + sx * sy * sz;\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport const clone = vec4.clone;\r\n\r\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport const fromValues = vec4.fromValues;\r\n\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport const copy = vec4.copy;\r\n\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport const set = vec4.set;\r\n\r\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport const add = vec4.add;\r\n\r\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\r\nexport const mul = multiply;\r\n\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport const scale = vec4.scale;\r\n\r\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport const dot = vec4.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport const lerp = vec4.lerp;\r\n\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport const length = vec4.length;\r\n\r\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\r\nexport const len = length;\r\n\r\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport const squaredLength = vec4.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\r\nexport const sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport const normalize = vec4.normalize;\r\n\r\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport const exactEquals = vec4.exactEquals;\r\n\r\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport const equals = vec4.equals;\r\n\r\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\r\nexport const rotationTo = (function() {\r\n  let tmpvec3 = vec3.create();\r\n  let xUnitVec3 = vec3.fromValues(1,0,0);\r\n  let yUnitVec3 = vec3.fromValues(0,1,0);\r\n\r\n  return function(out, a, b) {\r\n    let dot = vec3.dot(a, b);\r\n    if (dot < -0.999999) {\r\n      vec3.cross(tmpvec3, xUnitVec3, a);\r\n      if (vec3.len(tmpvec3) < 0.000001)\r\n        vec3.cross(tmpvec3, yUnitVec3, a);\r\n      vec3.normalize(tmpvec3, tmpvec3);\r\n      setAxisAngle(out, tmpvec3, Math.PI);\r\n      return out;\r\n    } else if (dot > 0.999999) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n      out[2] = 0;\r\n      out[3] = 1;\r\n      return out;\r\n    } else {\r\n      vec3.cross(tmpvec3, a, b);\r\n      out[0] = tmpvec3[0];\r\n      out[1] = tmpvec3[1];\r\n      out[2] = tmpvec3[2];\r\n      out[3] = 1 + dot;\r\n      return normalize(out, out);\r\n    }\r\n  };\r\n})();\r\n\r\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount\r\n * @returns {quat} out\r\n */\r\nexport const sqlerp = (function () {\r\n  let temp1 = create();\r\n  let temp2 = create();\r\n\r\n  return function (out, a, b, c, d, t) {\r\n    slerp(temp1, a, d, t);\r\n    slerp(temp2, b, c, t);\r\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\r\n\r\n    return out;\r\n  };\r\n}());\r\n\r\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\r\nexport const setAxes = (function() {\r\n  let matr = mat3.create();\r\n\r\n  return function(out, view, right, up) {\r\n    matr[0] = right[0];\r\n    matr[3] = right[1];\r\n    matr[6] = right[2];\r\n\r\n    matr[1] = up[0];\r\n    matr[4] = up[1];\r\n    matr[7] = up[2];\r\n\r\n    matr[2] = -view[0];\r\n    matr[5] = -view[1];\r\n    matr[8] = -view[2];\r\n\r\n    return normalize(out, fromMat3(out, matr));\r\n  };\r\n})();\r\n","import * as quat from \"../../gl-matrix/src/gl-matrix/quat.js\";\r\n\r\nexport default class Quaternion extends Float32Array {\r\n  constructor(x = 0, y = 0, z = 0, w = 1) {\r\n    super(4);\r\n    this.set(x, y, z, w);\r\n    return this;\r\n  }\r\n\r\n  get x() {\r\n    return this[0];\r\n  }\r\n\r\n  set x(value) {\r\n    this[0] = value;\r\n  }\r\n\r\n  get y() {\r\n    return this[1];\r\n  }\r\n\r\n  set y(value) {\r\n    this[1] = value;\r\n  }\r\n\r\n  get z() {\r\n    return this[2];\r\n  }\r\n\r\n  set z(value) {\r\n    this[2] = value;\r\n  }\r\n\r\n  get w() {\r\n    return this[3];\r\n  }\r\n\r\n  set w(value) {\r\n    this[3] = value;\r\n  }\r\n\r\n  identity() {\r\n    quat.identity(this);\r\n    return this;\r\n  }\r\n\r\n  set(x, y, z, w) {\r\n    quat.set(this, x, y, z, w);\r\n    return this;\r\n  }\r\n\r\n  rotateX(angle) {\r\n    quat.rotateX(this, this, angle);\r\n    return this;\r\n  }\r\n\r\n  rotateY(angle) {\r\n    quat.rotateY(this, this, angle);\r\n    return this;\r\n  }\r\n\r\n  rotateZ(angle) {\r\n    quat.rotateZ(this, this, angle);\r\n    return this;\r\n  }\r\n\r\n  invert(quaternion = this) {\r\n    quat.invert(this, quaternion);\r\n    return this;\r\n  }\r\n\r\n  copy(quaternion) {\r\n    quat.copy(this, quaternion);\r\n    return this;\r\n  }\r\n\r\n  normalize(quaternion = this) {\r\n    quat.normalize(this, this);\r\n    return this;\r\n  }\r\n\r\n  multiply(quaternionA, quaternionB) {\r\n    if (quaternionB) {\r\n      quat.multiply(this, quaternionA, quaternionB);\r\n    } else {\r\n      quat.multiply(this, this, quaternionA);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  fromMatrix3(matrix3) {\r\n    quat.fromMat3(this, matrix3);\r\n    return this;\r\n  }\r\n}\r\n","import Pointer from \"../../input/Pointer.js\";\nimport Matrix4 from \"../../math/Matrix4.js\";\nimport Vector2 from \"../../math/Vector2.js\";\nimport Vector3 from \"../../math/Vector3.js\";\nimport Quaternion from \"../../math/Quaternion.js\";\n\nexport default class TrackballController {\n  constructor({\n    matrix = new Matrix4(), \n    domElement = document.body,\n    distance = 0,\n    invertRotation = true,\n    rotationEaseRatio = .04,\n    zoomSpeed = .1,\n    zoomEaseRatio = .1,\n    minDistance = 0,\n    maxDistance = Infinity,\n    enabled = true\n  } = {}) {\n    this.matrix = matrix;\n\n    this._distance = distance;\n    this.invertRotation = invertRotation;\n    this.rotationEaseRatio = rotationEaseRatio;\n    this.maxDistance = maxDistance;\n    this.minDistance = minDistance;\n    this.zoomSpeed = zoomSpeed;\n    this.zoomEaseRatio = zoomEaseRatio;\n    \n    this._pointer = Pointer.get(domElement);\n    this._nextDistance = this._distance;\n    \n    this._cachedQuaternion = new Quaternion();\n    this._cachedMatrix = new Matrix4();\n    this._cachedVector3 = new Vector3();\n    \n    this._velocity = new Vector2();\n    this._velocityOrigin = new Vector2();\n    \n    this._position = new Vector3([this.matrix.x, this.matrix.y, this.matrix.z]);\n    this._positionPrevious = this._position.clone();\n    this._positionOffset = new Vector3();\n    \n    domElement.addEventListener(\"wheel\", this.onWheel.bind(this));\n    \n    this.enabled = true;\n    this.update();\n    this.enabled = enabled;\n  }\n\n  set distance(value) {\n    this._distance = this._nextDistance = value;\n  }\n\n  get distance() {\n    return this._distance;\n  }\n\n  onWheel(e) {\n    if(!this.enabled) {\n      return;\n    }\n    const scrollOffsetRatio = 1 + Math.abs(e.deltaY * this.zoomSpeed * .01);\n    this._nextDistance = e.deltaY > 0 ? this._nextDistance * scrollOffsetRatio : this._nextDistance / scrollOffsetRatio;\n    this._nextDistance = Math.max(Math.min(this._nextDistance, this.maxDistance), this.minDistance);\n  }\n\n  update() {\n    if(!this.enabled) {\n      return;\n    }\n\n    this._cachedMatrix.identity();\n    this._cachedQuaternion.identity();\n\n    this._distance += (this._nextDistance - this._distance) * this.zoomEaseRatio;\n\n    this._position.set(this.matrix.x, this.matrix.y, this.matrix.z).subtract(this._positionOffset);\n\n    this.matrix.x = 0;\n    this.matrix.y = 0;\n    this.matrix.z = 0;\n\n    if(this._pointer.downed) {\n      this._velocity.copy(this._pointer.velocity).scale(.003);\n    }\n\n    this._velocity.lerp(this._velocityOrigin, this.rotationEaseRatio);\n\n    this._cachedQuaternion.rotateY(this.invertRotation ? -this._velocity.x : this._velocity.x);\n    this._cachedQuaternion.rotateX(this.invertRotation ? -this._velocity.y : this._velocity.y);\n\n    this._cachedMatrix.fromQuaternion(this._cachedQuaternion);\n\n    this.matrix.multiply(this._cachedMatrix);\n\n    this._positionOffset.set(0, 0, 1);\n    this._positionOffset.applyMatrix4(this.matrix);\n    this._positionOffset.scale(this._distance);\n\n    this._cachedVector3.copy(this._position).add(this._positionOffset);\n\n    this.matrix.x = this._cachedVector3.x;\n    this.matrix.y = this._cachedVector3.y;\n    this.matrix.z = this._cachedVector3.z;\n  }\n}\n","export default class GLVertexArray {\n  constructor({\n    gl,\n    mesh = undefined,\n    program = undefined\n  } = { gl }) {\n    this.gl = gl;\n\n    const extension = gl.getExtension(\"OES_vertex_array_object\");\n    if (extension) {\n      this.gl.createVertexArray = extension.createVertexArrayOES.bind(extension);\n      this.gl.bindVertexArray = extension.bindVertexArrayOES.bind(extension);\n    }\n\n    this._vertexArray = this.gl.createVertexArray();\n\n    if (mesh || program) {\n      this.add({\n        mesh,\n        program\n      });\n    }\n  }\n\n  add({\n    mesh = undefined,\n    program = undefined\n  } = {}) {\n    this.bind();\n    program.attributes.set(mesh.attributes);\n    if (mesh.indices) {\n      mesh.indices.buffer.bind();\n    }\n    this.unbind();\n  }\n\n  bind() {\n    this.gl.bindVertexArray(this._vertexArray);\n  }\n\n  unbind() {\n    this.gl.bindVertexArray(null);\n  }\n}","export default class GLFrameBuffer {\n  constructor({\n    gl, \n    target = gl.FRAMEBUFFER,\n  }) {\n    this.gl = gl;\n    this.target = target;\n\n    this.colorTextures = [];\n    this.depthTexture = null;\n    this.stencilTexture = null;\n\n    this._frameBuffer = this.gl.createFramebuffer();\n  }\n\n  attach({\n    texture,\n    attachment = this.gl.COLOR_ATTACHMENT0,\n    target = this.target,\n    textarget = this.gl.TEXTURE_2D,\n  }) {\n    this.bind({target});\n    if(attachment === this.gl.DEPTH_ATTACHMENT) {\n      this.depthTexture = texture;\n    } else if(attachment === this.gl.STENCIL_ATTACHMENT) {\n      this.stencilTexture = texture;\n    } else {\n      this.colorTextures[attachment - this.gl.COLOR_ATTACHMENT0] = texture;\n    }\n    this.gl.framebufferTexture2D(target, attachment, textarget, texture._texture || texture, 0);\n    this.unbind({target});\n  }\n\n  bind({\n    target = this.target\n  } = {}) {\n    this.gl.bindFramebuffer(target, this._frameBuffer);\n  }\n\n  unbind({\n    target = this.target\n  } = {}) {\n    this.gl.bindFramebuffer(target, null);\n  }\n};\n","export default class PlaneMesh {\n  constructor({\n    width = 1, \n    height = 1, \n    columns = 1, \n    rows = 1,\n    positions = undefined,\n    normals = undefined,\n    uvs = undefined,\n    indices = undefined\n  } = {}) {\n    let xSegments = columns + 1;\n    let ySegments = rows + 1;\n\n    let verticesNumber = xSegments * ySegments;\n    \n    this.positions = positions === undefined ? new Float32Array(verticesNumber * 3) : positions;\n    this.normals = normals === undefined ? new Float32Array(verticesNumber * 3) : normals;\n    this.uvs = uvs === undefined ? new Float32Array(verticesNumber * 2) : uvs;\n    this.indices = indices === undefined ? new Uint16Array(columns * rows * 6) : indices;\n\n    this.attributes = new Map();\n\n    if(this.positions) {\n      this.attributes.set(\"position\", {\n        data: this.positions,\n        size: 3\n      });\n    }\n    \n    if(this.normals) {\n      this.attributes.set(\"normal\", {\n        data: this.normals,\n        size: 3\n      });\n    }\n    \n    if(this.uvs) {\n      this.attributes.set(\"uv\", {\n        data: this.uvs,\n        size: 2\n      });\n    }\n\n    for (let j = 0; j < ySegments; j++) {\n      let v = 1 - j / rows;\n      let y = j / rows * height - height * .5;\n\n      for (let i = 0; i < xSegments; i++) {\n        let u = i / columns;\n\n        let offset = j * xSegments + i;\n\n        if(this.positions) {\n          this.positions[offset * 3] = u * width - width * .5;\n          this.positions[offset * 3 + 1] = y;\n        }\n\n        if(this.normals) {\n          this.normals[offset * 3 + 2] = 1;\n        }\n\n        if(this.uvs) {\n          this.uvs[offset * 2] = u;\n          this.uvs[offset * 2 + 1] = 1 - v;\n        }\n      }\n    }\n\n    if(this.indices) {\n      for (let j = 0; j < rows; j++) {\n        for (let i = 0; i < columns; i++) {\n          var a = i + xSegments * j;\n          var b = i + xSegments * (j + 1);\n          var c = (i + 1) + xSegments * (j + 1);\n          var d = (i + 1) + xSegments * j;\n  \n          let offset = j * rows + i;\n  \n          this.indices[offset * 6] = a;\n          this.indices[offset * 6 + 1] = d;\n          this.indices[offset * 6 + 2] = b;\n          this.indices[offset * 6 + 3] = b;\n          this.indices[offset * 6 + 4] = d;\n          this.indices[offset * 6 + 5] = c;\n        }\n      }\n    }\n  }\n}","const QUEUES = new Map();\n\nexport default class WebSocket extends window.WebSocket {\n  constructor() {\n    super(...arguments);\n\n    QUEUES.set(this, []);\n\n    const sendQueue = () => {\n      this.removeEventListener(\"open\", sendQueue);\n      for (let data of QUEUES.get(this)) {\n        this.send(data);\n      }\n      QUEUES.delete(this);\n    }\n    this.addEventListener(\"open\", sendQueue);\n  }\n\n  send(data) {\n    if(this.readyState === WebSocket.CONNECTING) {\n      QUEUES.get(this).push(data);\n    } else {\n      super.send(data);\n    }\n  }\n}\n","import Signal from \"../utils/Signal.js\";\n\nlet keysDown = new Set();\n\nlet onKeyDown = new Signal();\nlet onKeyUp = new Signal();\n\nexport default class Keyboard {\n  static get LEFT() {\n    return 37;\n  }\n  static get RIGHT() {\n    return 39;\n  }\n  static get UP() {\n    return 38;\n  }\n  static get DOWN() {\n    return 40;\n  }\n  static get SPACE() {\n    return 32;\n  }\n  static get SHIFT() {\n    return 16;\n  }\n  static hasKeyDown(keyCode) {\n    return keysDown.has(keyCode);\n  }\n  static addEventListener(type, listener) {\n    if(type === \"keydown\") {\n      onKeyDown.add(listener);\n    } else if(type === \"keyup\") {\n      onKeyUp.add(listener);\n    }\n  }\n  static removeEventListener(type, listener) {\n    if(type === \"keydown\") {\n      onKeyDown.delete(listener);\n    } else if(type === \"keyup\") {\n      onKeyUp.delete(listener);\n    }\n  }\n}\n\nwindow.addEventListener(\"keydown\", (e) => {\n  if(!Keyboard.hasKeyDown(e.keyCode)) {\n    onKeyDown.dispatch(e);\n  }\n  keysDown.add(e.keyCode);\n});\n\nwindow.addEventListener(\"keyup\", (e) => {\n  keysDown.delete(e.keyCode);\n  onKeyUp.dispatch(e);\n});\n","let style = document.createElement(\"style\");\ndocument.head.appendChild(style);\nstyle.sheet.insertRule(`\n  dlib-guiinput {\n    display: flex;\n    position: relative;\n    font-family: monospace;\n    font-size: 12px;\n    align-items: center;\n    height: 20px;\n  }\n`, 0);\nstyle.sheet.insertRule(`\n  dlib-guiinput * {\n    outline: none;\n  }\n`, 0);\nstyle.sheet.insertRule(`\n  dlib-guiinput label, dlib-guiinput input, dlib-guiinput select, dlib-gui textarea {\n    display: flex;\n    font-family: inherit;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    margin: 0 5px;\n  }\n`, 0);\nstyle.sheet.insertRule(`\n  dlib-guiinput label {\n    flex: 1;\n    min-width: 25%;\n  }\n`, 0);\nstyle.sheet.insertRule(`\n  dlib-guiinput label span {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n`, 0);\nstyle.sheet.insertRule(`\n  dlib-guiinput button.clear {\n    cursor: pointer;\n    font-family: inherit;\n    -webkit-appearance: none;\n    border: none;\n    font-size: 1em;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background: transparent;\n    color: inherit;\n  }\n`, 0);\nstyle.sheet.insertRule(`\n  dlib-guiinput input, dlib-guiinput select, dlib-gui textarea {\n    flex: 5;\n  }\n`, 0);\nstyle.sheet.insertRule(`\n  dlib-guiinput input.range {\n    flex: 2;\n  }\n`, 0);\nstyle.sheet.insertRule(`\n  dlib-guiinput input[type=\"range\"] {\n    flex: 3.5;\n  }\n`, 0);\nstyle.sheet.insertRule(`\n  dlib-guiinput input.color {\n    flex: 3.5;\n  }\n`, 0);\n\nconst roundToStep = (number, step) => {\n  return (Math.round(number * (1 / step)) / (1 / step));\n}\n\nexport default class GUIInput extends HTMLElement {\n  constructor () {\n    super();\n\n    this._object = null;\n    this._key = \"\";\n    this._type = \"\";\n    this._label = \"\";\n\n    this._inputs = [];\n    this._options = [];\n    this._step = 0.01;\n    this._min = 0;\n    this._max = Infinity;\n\n    this._initialValue = undefined;\n\n    this._onChangeBinded = this._onChange.bind(this);\n    this._onClearBinded = this._onClear.bind(this);\n  }\n\n  set value(value) {\n    this.object[this.key] = value;\n    this.update();\n  }\n\n  get value() {\n    return this.object[this.key];\n  }\n\n  set object(value) {\n    this._object = value;\n    this._updateHTML();\n  }\n\n  get object() {\n    return this._object;\n  }\n\n  set key(value) {\n    this._key = value;\n    this._updateHTML();\n  }\n\n  get key() {\n    return this._key;\n  }\n\n  set type(value) {\n    this._type = value;\n    this._updateHTML();\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  set label(value) {\n    this._label = value;\n    this._updateHTML();\n  }\n\n  get label() {\n    return this._label;\n  }\n\n  set step(value) {\n    this._step = value;\n    for (let input of this._inputs) {\n      input.step = this._step;\n    }\n    this.min = this.min;\n    this.max = this.max;\n  }\n\n  get step() {\n    return this._step;\n  }\n\n  set min(value) {\n    this._min = roundToStep(value, this.step);\n    for (let input of this._inputs) {\n      input.min = this._min;\n    }\n  }\n\n  get min() {\n    return this._min;\n  }\n\n  set max(value) {\n    this._max = roundToStep(value, this.step);\n    for (let input of this._inputs) {\n      input.max = this._max;\n    }\n  }\n\n  get max() {\n    return this._max;\n  }\n\n  set options(value) {\n    this._options = value;\n    if(!this._inputs[0] || this._inputs[0].tagName !== \"SELECT\") {\n      return;\n    }\n    \n    let html = \"\";\n    for (let option of this._options) {\n      html += `<option selected=\"${option === this.value}\" value=\"${option}\">${option}</option>`;\n    }\n    this._inputs[0].innerHTML = html;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  update() {\n    if(this.type === \"button\") {\n      return;\n    }\n    let changed = false;\n    for (let input of this._inputs) {\n      let key = input.type === \"checkbox\" ? \"checked\" : \"value\";\n      let value = this.value;\n      value = input.type === \"range\" ? Math.min(Math.max(value, this.min), this.max) : value;\n      value = input.type !== \"checkbox\" ? value.toString() : value;\n      if(value !== input[key]) {\n        input[key] = value;\n        changed = true;\n      }\n    }\n\n    if(changed) {\n      this.dispatchEvent(new Event(\"change\"));\n    }\n  }\n\n  _onChange(e) {\n    let value;\n\n    if(e.target instanceof HTMLInputElement && e.target.type === \"checkbox\") {\n      this.value = e.target.checked;\n    } else if(e.target.type === \"range\" || e.target.type === \"number\") {\n      if(e.target.valueAsNumber === undefined) {\n        return;\n      }\n      this.value = e.target.valueAsNumber;\n    } else if(e.target.type === \"button\") {\n      this.value();\n    } else if(e.target.type === \"color\") {\n      if(e.type === \"change\") {\n        this.value = e.target.value;\n      }\n    } else {\n      this.value = e.target.value;\n    }\n  }\n\n  _onClear() {\n    this.value = this._initialValue;\n  }\n\n  _updateHTML() {\n    if(!this.object || !this.key || !this.type) {\n      return;\n    }\n\n    if(this._initialValue === undefined) {\n      this._initialValue = this.value;\n    }\n\n    this.removeEventListener(\"input\", this._onChangeBinded);\n    this.removeEventListener(\"change\", this._onChangeBinded);\n    this.removeEventListener(\"click\", this._onChangeBinded);\n    if(this.querySelector(\".clear\")) {\n      this.querySelector(\".clear\").removeEventListener(\"click\", this._onClearBinded);\n    }\n\n    // TODO: Update with ShadowDOM when cross-browser\n\n    this.innerHTML = `\n      <label title=\"${this.label}\"><span>${this.label}</span></label>\n      ${this.type === \"select\" ? \"<select></select>\" : (this.type === \"text\" ? `<textarea rows=\"1\"></textarea>` : `<input type=\"${this.type}\"/>`)}\n      ${this.type === \"range\" ? \"<input class=\\\"range\\\" type=\\\"number\\\"/>\" : \"\"}\n      ${this.type === \"color\" ? \"<input class=\\\"color\\\" type=\\\"text\\\"/>\" : \"\"}\n      <button class=\"clear\">✕</button>\n    `;\n\n    this._inputs = Array.from(this.querySelectorAll(\"input, select, textarea\"));\n\n    if(this.type === \"range\") {\n      let nextDecimal = Math.pow(10, Math.abs(parseInt(this.value)).toString().length);\n      this.max = this.max !== Infinity ? this.max : (this.value < 0 ? 0 : (Math.abs(this.value) < 1 ? 1 : nextDecimal));\n      this.min = this.min || (this.value >= 0 ? 0 : (Math.abs(this.value) < 1 ? -1 : -nextDecimal));\n    } else if(this.type === \"button\") {\n      this._inputs[0].value = this.label;\n    } else if(this.type === \"select\") {\n      this.options = this.options;\n    }\n\n    this.step = this.step;\n\n    this.querySelector(\".clear\").addEventListener(\"click\", this._onClearBinded);\n    if(this.type === \"button\") {\n      this.addEventListener(\"click\", this._onChangeBinded);\n    } else {\n      this.addEventListener(\"input\", this._onChangeBinded);\n      this.addEventListener(\"change\", this._onChangeBinded);\n    }\n\n    this.update();\n  }\n}\n\nwindow.customElements.define(\"dlib-guiinput\", GUIInput);\n","import WebSocket from \"../utils/WebSocket.js\";\nimport Keyboard from \"../input/Keyboard.js\";\nimport GUIInput from \"./GUIInput.js\";\n\nlet staticGUI;\n\n// STYLES\n\nlet style = document.createElement(\"style\");\ndocument.head.appendChild(style);\nstyle.sheet.insertRule(`\n  dlib-gui {\n    display: block;\n    position: absolute;\n    resize: horizontal;\n    top: 0;\n    left: 0;\n    width: 300px;\n    max-width: 100%;\n    padding: 5px;\n    color: white;\n    font-family: monospace;\n    max-height: 100%;\n    box-sizing: border-box;\n    overflow: auto;\n  }\n`, 0);\nstyle.sheet.insertRule(`\n  dlib-gui dlib-guiinput {\n    margin: 5px 0;\n  }\n`, 0);\nstyle.sheet.insertRule(`\n  dlib-gui details details {\n    margin: 10px;\n  }\n`, 0);\nstyle.sheet.insertRule(`\n  dlib-gui details summary {\n    cursor: pointer;\n  }\n`, 0);\nstyle.sheet.insertRule(`\n  dlib-gui details summary:focus {\n    outline: none;\n  }\n`, 0);\n\n// UTILS\n\nfunction componentToHex(c) {\n  let hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return \"#\" + componentToHex(Math.floor(r * 255)) + componentToHex(Math.floor(g * 255)) + componentToHex(Math.floor(b * 255));\n}\n\nfunction hexToRgb(hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16) / 255,\n    g: parseInt(result[2], 16) / 255,\n    b: parseInt(result[3], 16) / 255\n  } : null;\n}\n\nfunction colorFromHex(color, hex) {\n  if (typeof color === \"string\") {\n    return hex;\n  }\n\n  let colorValue = hexToRgb(hex);\n\n  if (color.r !== undefined) {\n    Object.assign(color, colorValue);\n  } else if (color.x !== undefined) {\n    [color.x, color.y, color.z] = [colorValue.r, colorValue.g, colorValue.b];\n  } else {\n    [color[0], color[1], color[2]] = [colorValue.r, colorValue.g, colorValue.b];\n  }\n\n  return color;\n}\n\nfunction colorToHex(color) {\n  if (typeof color === \"string\") {\n    return color;\n  }\n  return rgbToHex(\n    color.r !== undefined ? color.r : color.x !== undefined ? color.x : color[0],\n    color.g !== undefined ? color.g : color.y !== undefined ? color.y : color[1],\n    color.b !== undefined ? color.b : color.z !== undefined ? color.z : color[2]\n  );\n}\n\nfunction normalizeString(string) {\n  return `${string.toLowerCase().replace(/[^\\w-]/g, \"\")}`;\n}\n\nfunction urlHashRegExpFromKey(key) {\n  return new RegExp(`([#&]gui/${key}=)([^=&#?]*)`, \"g\");\n}\n\n// GUI\n\nconst GUI_REG_EXP = /([#&]gui=)((%7B|{).*(%7D|}))([&?]*)/;\n\nlet DATA = {};\n(function() {\n  let matches = GUI_REG_EXP.exec(window.location.hash);\n  if (matches) {\n    let string = matches[2];\n    string = string.replace(/”|%E2%80%9D/g, \"%22\");\n    window.location.hash = window.location.hash.replace(GUI_REG_EXP, `$1${string}$5`);\n    DATA = JSON.parse(decodeURI(string));\n    console.log(\"GUI data:\", DATA);\n  }\n})();\n\nexport default class GUI extends HTMLElement {\n  static _addStatic() {\n    if (staticGUI) {\n      return;\n    }\n    staticGUI = document.createElement(\"dlib-gui\");\n    document.body.appendChild(staticGUI);\n  }\n\n  static add(...params) {\n    GUI._addStatic();\n    return staticGUI.add(...params);\n  }\n\n  static get element() {\n    return staticGUI;\n  }\n\n  static get data() {\n    return DATA;\n  }\n\n  static set visible(value) {\n    GUI._addStatic();\n    staticGUI.visible = value;\n  }\n\n  static get visible() {\n    return staticGUI.visible;\n  }\n\n  static set open(value) {\n    GUI._addStatic();\n    staticGUI.open = value;\n  }\n\n  static get groups() {\n    return staticGUI.groups;\n  }\n\n  static get open() {\n    return staticGUI.open;\n  }\n\n  static get update() {\n    return staticGUI.update;\n  }\n\n  static set serverUrl(value) {\n    GUI._addStatic();\n    staticGUI.serverUrl = value;\n  }\n\n  constructor({serverUrl} = {}) {\n    super();\n\n    this.serverUrl = serverUrl;\n\n    this.groups = new Map();\n    this._inputs = new Map();\n    this._uids = new Set();\n\n    this._container = document.createElement(\"details\");\n    this._container.innerHTML = \"<summary>GUI</summary>\";\n\n    this.open = true;\n  }\n\n  set serverUrl(value) {\n    this._serverUrl = value;\n\n    if(this._webSocket) {\n      this._webSocket.removeEventListener(\"message\", this._onWebSocketMessage);\n      this._webSocket.close();\n      this._webSocket = null;\n    }\n    if(!this._serverUrl) {\n      return;\n    }\n    this._webSocket = new WebSocket(this._serverUrl);\n    this._onWebSocketMessage = (e) => {\n      let data = JSON.parse(e.data);\n      let input = this._inputs.get(data.uid);\n      if(input._client) {\n        if(input.type === \"button\") {\n          input.value();\n        } else {\n          input.value = data.value;\n        }\n      }\n    }\n    this._webSocket.addEventListener(\"message\", this._onWebSocketMessage);\n  }\n\n  get serverUrl() {\n    return this._serverUrl;\n  }\n\n  set visible(value) {\n    this.style.display = value ? \"\" : \"none\";\n  }\n\n  get visible() {\n    return this.style.visibility === \"visible\";\n  }\n\n  update() {\n    for (let input of this._inputs.values()) {\n      input.update();\n    }\n  }\n\n  set open(value) {\n    this._container.open = value;\n  }\n\n  get open() {\n    return this._container.open;\n  }\n\n  add({object, key, type, label = key, id = label, group = \"\", reload = false, remote = false, client = remote, onChange = (value) => {}, options, max, min, step} = {}) {\n    \n    const INITIAL_VALUE = type === \"color\" ? colorToHex(object[key]) : object[key];\n    \n    if(INITIAL_VALUE === null || INITIAL_VALUE === undefined) {\n      console.error(`GUI: ${id} must be defined.`);\n      return;\n    }\n\n    let idKey = normalizeString(id);\n    let groupKey = normalizeString(group);\n    let uid = groupKey ? `${groupKey}/${idKey}` : idKey;\n\n    if(this._uids.has(uid)) {\n      console.error(`GUI: An input with id ${id} already exist in the group ${group}`);\n      return;\n    }\n\n    this._uids.add(uid);\n\n    if(remote && !this.serverUrl) {\n      this._serverUrl = `wss://${location.hostname}:80`;\n    }\n\n    type = type || (options ? \"select\" : \"\");\n\n    if (!type) {\n      switch (typeof INITIAL_VALUE) {\n        case \"boolean\":\n          type = \"checkbox\";\n          break;\n        case \"string\":\n          type = \"text\";\n          break;\n        case \"function\":\n          type = \"button\";\n          break;\n        default:\n          type = typeof INITIAL_VALUE;\n      }\n    }\n\n    if (!this._container.parentNode) {\n      this.appendChild(this._container);\n    }\n    let container = this._container;\n    if(group) {\n      container = this.groups.get(group);\n      if(!container) {\n        container = document.createElement(\"details\");\n        container.open = true;\n        container.innerHTML = `<summary>${group}</summary>`;\n        this.groups.set(group, container);\n        this._container.appendChild(container);\n      }\n    }\n    let input = document.createElement(\"dlib-guiinput\");\n    input.object = type === \"color\" ? {\n      value: \"#000000\"\n    } : object;\n    input.key = type === \"color\" ? \"value\" : key;\n    input.label = label;\n    input.value = INITIAL_VALUE;\n    input._client = client;\n    if (min) {\n      input.min = min;\n    }\n    if (max) {\n      input.max = max;\n    }\n    if (step) {\n      input.step = step;\n    }\n    if (options) {\n      input.options = options;\n    }\n    input.type = type;\n    container.appendChild(input);\n\n    const SAVED_VALUE = groupKey && DATA[groupKey] ? DATA[groupKey][idKey] : DATA[idKey];\n    if(SAVED_VALUE !== undefined) {\n      input.value = SAVED_VALUE;\n      if (type === \"color\") {\n        object[key] = colorFromHex(object[key], SAVED_VALUE);\n      }\n    }\n\n    const onValueChange = (value) => {\n      let containerData = groupKey ? DATA[groupKey] : DATA;\n      if (!containerData) {\n        containerData = DATA[groupKey] = {};\n      }\n      if(input.value !== INITIAL_VALUE) {\n        containerData[idKey] = input.value;\n      } else {\n        delete containerData[idKey];\n        if(groupKey && !Object.keys(containerData).length) {\n          delete DATA[groupKey];\n        }\n      }\n\n      if (GUI_REG_EXP.test(window.location.hash)) {\n        window.location.hash = window.location.hash.replace(\n          GUI_REG_EXP, \n          Object.keys(DATA).length ? `$1${encodeURI(JSON.stringify(DATA))}$5` : \"\"\n        );\n      } else {\n        let prefix = window.location.hash ? \"&\" : \"#\";\n        window.location.hash += `${prefix}gui=${encodeURI(JSON.stringify(DATA))}`;\n      }\n\n      if(remote && this._webSocket) {\n        this._webSocket.send(JSON.stringify({uid, value}));\n      }\n\n      if (reload) {\n        if (Keyboard.hasKeyDown(Keyboard.SHIFT)) {\n          Keyboard.addEventListener(\"keyup\", function reloadLocation() {\n            Keyboard.removeEventListener(\"keyup\", reloadLocation);\n            window.location.reload();\n          });\n        } else {\n          window.location.reload();\n        }\n      }\n\n      onChange(value);\n    }\n\n\n    // TODO: Clean here\n\n    if (type === \"button\") {\n      input.addEventListener(\"click\", onValueChange);\n    } else {\n      let animationFrameId = -1;\n      const onValueChangeTmp = () => {\n        cancelAnimationFrame(animationFrameId);\n        animationFrameId = requestAnimationFrame(() => {\n          if (type === \"color\") {\n            onValueChange(colorFromHex(object[key], input.value));\n          } else {\n            onValueChange(input.value);\n          }\n        });\n      }\n\n      if (type !== \"text\" && type !== \"number\") {\n        input.addEventListener(\"input\", onValueChangeTmp);\n      }\n      input.addEventListener(\"change\", onValueChangeTmp);\n    }\n\n    onChange(object[key]);\n\n    this._inputs.set(uid, input);\n\n    return input;\n  }\n}\n\nwindow.customElements.define(\"dlib-gui\", GUI);\n","export default class DepthShader {\n  static pack() {\n    return `\n      vec4 pack (float depth) {\n        const vec4 bitSh = vec4(256 * 256 * 256, 256 * 256, 256, 1.0);\n        const vec4 bitMsk = vec4(0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);\n        vec4 comp = fract(depth * bitSh);\n        comp -= comp.xxyz * bitMsk;\n        return comp;\n      }\n    `;\n  }\n\n  static unpack() {\n    return `\n      float unpack (vec4 packedDepth) {\n        const vec4 bitShifts = vec4(1.0 / (256.0 * 256.0 * 256.0), 1.0 / (256.0 * 256.0), 1.0 / 256.0, 1);\n        return dot(packedDepth, bitShifts);\n      }\n    `;\n  }\n\n  static bumpFromDepth ({\n    getDepth = \"return texture(depthTexture, uv).r;\"\n  } = {}) {\n    return `\n      float getDepth(sampler2D depthTexture, vec2 uv) {\n        ${getDepth}\n      }\n    \n      vec4 bumpFromDepth(sampler2D depthTexture, vec2 uv, vec2 resolution, float scale) {\n        vec2 step = 1. / resolution;\n          \n        float height = getDepth(depthTexture, uv);\n          \n        vec2 dxy = height - vec2(\n            getDepth(depthTexture, uv + vec2(step.x, 0.)), \n            getDepth(depthTexture, uv + vec2(0., step.y))\n        );\n          \n        return vec4(normalize(vec3(dxy * scale / step, 1.)), height);\n      }\n    `;\n  }\n}\n","import Matrix4 from \"../math/Matrix4.js\";\r\nimport GLMesh from \"./GLMesh.js\";\r\nimport GLProgram from \"./GLProgram.js\";\r\nimport GLVertexArray from \"./GLVertexArray.js\";\r\nimport GLTexture from \"./GLTexture.js\";\r\n\r\nexport default class GLObject {\r\n  constructor({\r\n    gl,\r\n    mesh = new GLMesh(),\r\n    program = new GLProgram(),\r\n    vertexArray = new GLVertexArray({\r\n      gl, \r\n      mesh,\r\n      program\r\n    })\r\n  } = { gl }) {\r\n    this.gl = gl;\r\n    this.mesh = mesh;\r\n    this.program = program;\r\n    this.vertexArray = vertexArray;\r\n    \r\n    this._boundTextures = new Set();\r\n  }\r\n\r\n  draw() {\r\n    this.program.use();\r\n    this.vertexArray.bind();\r\n    let unit = 0;\r\n    for (const [name, type] of this.program.uniformTypes) {\r\n      if(type.startsWith(\"sampler\")) {\r\n        const value = this.program.uniforms.get(name);\r\n        if(value instanceof GLTexture) {\r\n          value.bind({\r\n            unit\r\n          });\r\n          this._boundTextures.add(value);\r\n        }\r\n        unit++;\r\n      }\r\n    }\r\n    this.mesh.draw();\r\n    this.vertexArray.unbind();\r\n    for (const texture of this._boundTextures) {\r\n      texture.unbind();\r\n    }\r\n  }\r\n}","export default class BasicShader {\n  constructor({\n    positions = true,\n    normals = true,\n    uvs = true\n  }) {\n    this._positions = !!positions;\n    this._normals = !!normals;\n    this._uvs = !!uvs;\n  }\n\n  get vertexShaderChunks() {\n    return [\n      [\"start\", `\n      uniform mat4 projectionView;\n      uniform mat4 transform;\n\n      ${this._positions ? \"in vec3 position;\\n\" : \"\"}${this._normals ? \"in vec3 normal;\\n\" : \"\"}${this._uvs ? \"in vec2 uv;\\n\" : \"\"}\n\n      ${this._positions ? \"out vec3 vPosition;\\n\" : \"\"}${this._normals ? \"out vec3 vNormal;\\n\" : \"\"}${this._uvs ? \"out vec2 vUv;\\n\" : \"\"}\n      `\n      ],\n      [\"main\", `\n      ${this._positions ? \"vPosition = position;\\n\" : \"\"}${this._normals ? \"vNormal = normal;\\n\" : \"\"}${this._uvs ? \"vUv = uv;\\n\" : \"\"}\n      `\n      ],\n      [\"end\", `\n      gl_Position = projectionView * transform * vec4(position, 1.);\n      `\n      ]\n    ]\n  }\n\n  get fragmentShaderChunks() {\n    return [\n      [\"start\", `\n      ${this._positions ? \"in vec3 vPosition;\\n\" : \"\"}${this._normals ? \"in vec3 vNormal;\\n\" : \"\"}${this._uvs ? \"in vec2 vUv;\\n\" : \"\"}\n      `\n      ]\n    ];\n  }\n}\n","import PlaneMesh from \"../3d/PlaneMesh.js\";\r\nimport GLObject from \"./GLObject.js\";\r\nimport GLMesh from \"./GLMesh.js\";\r\nimport GLVertexAttribute from \"./GLVertexAttribute.js\";\r\nimport GLProgram from \"./GLProgram.js\";\r\nimport Matrix4 from \"../math/Matrix4.js\";\r\nimport BasicShader from \"../shaders/BasicShader.js\";\r\n\r\nexport default class GLPlaneObject extends GLObject {\r\n  constructor({\r\n    gl,\r\n    width = 1,\r\n    height = 1,\r\n    columns = 1,\r\n    rows = 1,\r\n    positions = undefined,\r\n    normals = undefined,\r\n    uvs = undefined,\r\n    indices = undefined,\r\n    transform = new Matrix4(),\r\n    shaders = []\r\n  } = { gl }) {\r\n    super({\r\n      gl,\r\n      mesh: new GLMesh(Object.assign({ gl }, new PlaneMesh({\r\n        width,\r\n        height,\r\n        columns,\r\n        rows,\r\n        positions,\r\n        normals,\r\n        uvs,\r\n        indices\r\n      }))),\r\n      program: new GLProgram({\r\n        gl,\r\n        shaders: [\r\n          new BasicShader({\r\n            normal: false,\r\n            uv: false\r\n          }),\r\n          ...shaders\r\n        ]\r\n      })\r\n    });\r\n\r\n    this.transform = transform;\r\n  }\r\n\r\n  draw({ camera = undefined } = {}) {\r\n    this.program.use();\r\n    if (this.transform) {\r\n      this.program.uniforms.set(\"transform\", this.transform);\r\n    }\r\n    if (camera) {\r\n      this.program.uniforms.set(\"projectionView\", camera.projectionView);\r\n    }\r\n    this.vertexArray.bind();\r\n    this.mesh.draw();\r\n    this.vertexArray.unbind();\r\n  }\r\n}","import GLProgram from \"../../node_modules/dlib/gl/GLProgram.js\";\r\nimport Matrix4 from \"../../node_modules/dlib/math/Matrix4.js\";\r\nimport GLMesh from \"../../node_modules/dlib/gl/GLMesh.js\";\r\nimport GLVertexAttribute from \"../../node_modules/dlib/gl/GLVertexAttribute.js\";\r\nimport GLBuffer from \"../../node_modules/dlib/gl/GLBuffer.js\";\r\nimport GLVertexArray from \"../../node_modules/dlib/gl/GLVertexArray.js\";\r\n\r\nconst GRAINS = 500000;\r\n\r\nexport default class SandLayer {\r\n  constructor({ gl }) {\r\n    this.gl = gl;\r\n\r\n    this.program = new GLProgram({\r\n      gl: this.gl,\r\n      transformFeedbackVaryings: [\"vPosition\", \"vVelocity\"],\r\n      uniforms: [\r\n        [\"transform\", new Matrix4()]\r\n      ],\r\n      vertexShaderChunks: [\r\n        [\"start\", `\r\n          uniform mat4 projectionView;\r\n          uniform mat4 transform;\r\n          uniform vec4 pointer;\r\n          uniform sampler2D frameTexture;\r\n\r\n          in vec3 position;\r\n          in vec3 velocity;\r\n\r\n          out vec3 vPosition;\r\n          out vec3 vVelocity;\r\n          out vec4 vTest;\r\n        `],\r\n        [\"end\", `\r\n          vec3 position = position;\r\n          vec3 velocity = velocity;\r\n          vec4 pointer = pointer;\r\n\r\n          velocity += .001;\r\n\r\n          // velocity.xy += pointer.zw * .0001 * step(distance(position.xy, pointer.xy), .1);\r\n          velocity.xy += pointer.zw * .01 * smoothstep(0., 1., .2 - distance(position.xy, pointer.xy));\r\n          \r\n          position += velocity;\r\n          position *= sign(1. - abs(position));\r\n          position.z -= .1;\r\n          position.z = max(position.z, 0.);\r\n          \r\n          vec3 normal = texture(frameTexture, position.xy * .5 + .5).rgb * 2. - 1.;\r\n          velocity = reflect(velocity, normal);\r\n          velocity *= 1. - max(0., dot(normalize(velocity), normal));\r\n          \r\n          gl_Position = projectionView * transform * vec4(position, 1.);\r\n          gl_PointSize = 1.;\r\n          \r\n          vPosition = position;\r\n          vVelocity = velocity;\r\n        `]\r\n      ],\r\n      fragmentShaderChunks: [\r\n        [\"start\", `\r\n          precision highp float;\r\n\r\n          uniform sampler2D frameTexture;\r\n\r\n          in vec3 vVelocity;\r\n          in vec3 vPosition;\r\n          in vec4 vTest;\r\n        `],\r\n        [\"end\", `\r\n          fragColor.a = .02;\r\n        `]\r\n      ]\r\n    });\r\n\r\n    const data = new Float32Array(GRAINS * 6);\r\n    for (let index = 0; index < GRAINS * 2; index++) {\r\n      data[index * 6] = Math.random() * 2 - 1;\r\n      data[index * 6 + 1] = Math.random() * 2 - 1;\r\n      // data[index * 6 + 2] = index / GRAINS;\r\n    }\r\n\r\n    this.transformFeedbackBuffer1 = new GLBuffer({\r\n      gl: this.gl,\r\n      data: data,\r\n      usage: this.gl.DYNAMIC_COPY\r\n    });    \r\n    this.transformFeedbackBuffer2 = new GLBuffer(this.transformFeedbackBuffer1);\r\n\r\n    this.mesh = new GLMesh({\r\n      gl: this.gl,\r\n      attributes: [\r\n        [\"position\", new GLVertexAttribute({\r\n          gl: this.gl,\r\n          size: 3,\r\n          buffer: this.transformFeedbackBuffer1,\r\n          data,\r\n          stride: 24\r\n        })\r\n        ],\r\n        [\"velocity\", new GLVertexAttribute({\r\n          gl: this.gl,\r\n          size: 3,\r\n          buffer: this.transformFeedbackBuffer1,\r\n          data,\r\n          stride: 24,\r\n          offset: 12\r\n        })\r\n        ]\r\n      ]\r\n    });\r\n\r\n    this.transformFeedback = this.gl.createTransformFeedback();\r\n\r\n    this.vao1 = new GLVertexArray({\r\n      gl: this.gl,\r\n      mesh: this.mesh,\r\n      program: this.program\r\n    });\r\n\r\n    this.mesh.attributes.get(\"position\").buffer = this.transformFeedbackBuffer2;\r\n    this.mesh.attributes.get(\"velocity\").buffer = this.transformFeedbackBuffer2;\r\n\r\n    this.vao2 = new GLVertexArray({\r\n      gl: this.gl,\r\n      mesh: this.mesh,\r\n      program: this.program\r\n    });\r\n  }\r\n\r\n  draw({ pointer, frameTexture, camera }) {\r\n    this.gl.enable(this.gl.BLEND);\r\n    this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n    this.program.use();\r\n    // this.program.uniforms.set(\"projectionView\", camera.projectionView);\r\n    this.program.uniforms.set(\"pointer\", [\r\n      pointer.normalizedCenteredFlippedY.x,\r\n      pointer.normalizedCenteredFlippedY.y,\r\n      pointer.velocity.x,\r\n      -pointer.velocity.y\r\n    ]);\r\n    \r\n    this.vao1.bind();\r\n    \r\n    this.gl.bindTransformFeedback(this.gl.TRANSFORM_FEEDBACK, this.transformFeedback);\r\n    this.transformFeedbackBuffer2.bind({\r\n      target: this.gl.TRANSFORM_FEEDBACK_BUFFER,\r\n      index: 0\r\n    });\r\n    frameTexture.bind();\r\n    this.gl.beginTransformFeedback(this.gl.POINTS);\r\n    this.mesh.draw({\r\n      mode: this.gl.POINTS,\r\n      count: GRAINS\r\n    });\r\n    this.gl.endTransformFeedback();\r\n    frameTexture.unbind();\r\n    this.transformFeedbackBuffer2.unbind({\r\n      target: this.gl.TRANSFORM_FEEDBACK_BUFFER,\r\n      index: 0\r\n    });\r\n    this.gl.bindTransformFeedback(this.gl.TRANSFORM_FEEDBACK, null);\r\n\r\n    this.vao1.unbind();\r\n\r\n    [this.transformFeedbackBuffer1, this.transformFeedbackBuffer2] = [this.transformFeedbackBuffer2, this.transformFeedbackBuffer1];\r\n    [this.vao1, this.vao2] = [this.vao2, this.vao1];\r\n\r\n    this.gl.disable(this.gl.BLEND);\r\n  }\r\n}","// From https://github.com/Jam3/glsl-fast-gaussian-blur\n\nexport default class BlurShader {\n  constructor({\n    textureName = \"blurTexture\",\n    texture = 0,\n    distance = [1, 1]\n  } = {}) {\n    return {\n      uniforms: [\n        [\"blurDistance\", distance],\n        [textureName, texture]\n      ],\n      vertexShaderChunks: [\n        [\"start\", `\n          uniform vec2 blurDistance;\n          ${BlurShader.computeBlurTextureCoordinates()}\n        `],\n        [\"end\", `computeBlurTextureCoordinates(uv, blurDistance);`]\n      ],\n      fragmentShaderChunks: [\n        [\"start\", `\n          uniform sampler2D ${textureName};\n          ${BlurShader.blur()}\n        `],\n        [\"end\", `fragColor = blur(${textureName});`]\n      ]\n    }\n  }\n\n  static computeBlurTextureCoordinates() {\n    return `\n      out vec2 blurTextureCoordinates[15];\n\n      void computeBlurTextureCoordinates(vec2 uv, vec2 distance) {\n        blurTextureCoordinates[0] = uv + distance * -.028;\n        blurTextureCoordinates[1] = uv + distance * -.024;\n        blurTextureCoordinates[2] = uv + distance * -.020;\n        blurTextureCoordinates[3] = uv + distance * -.016;\n        blurTextureCoordinates[4] = uv + distance * -.012;\n        blurTextureCoordinates[5] = uv + distance * -.008;\n        blurTextureCoordinates[6] = uv + distance * -.004;\n        blurTextureCoordinates[7] = uv;\n        blurTextureCoordinates[8] = uv + distance * .004;\n        blurTextureCoordinates[9] = uv + distance * .008;\n        blurTextureCoordinates[10] = uv + distance * .012;\n        blurTextureCoordinates[11] = uv + distance * .016;\n        blurTextureCoordinates[12] = uv + distance * .020;\n        blurTextureCoordinates[13] = uv + distance * .024;\n        blurTextureCoordinates[14] = uv + distance * .028;\n      }\n    `\n  }\n\n  static blur() {\n    return `\n      in vec2 blurTextureCoordinates[15];\n\n      vec4 blur(sampler2D inTexture) {\n        vec4 result = vec4(0.0);\n        result += texture(inTexture, blurTextureCoordinates[0]) * 0.0044299121055113265;\n        result += texture(inTexture, blurTextureCoordinates[1]) * 0.00895781211794;\n        result += texture(inTexture, blurTextureCoordinates[2]) * 0.0215963866053;\n        result += texture(inTexture, blurTextureCoordinates[3]) * 0.0443683338718;\n        result += texture(inTexture, blurTextureCoordinates[4]) * 0.0776744219933;\n        result += texture(inTexture, blurTextureCoordinates[5]) * 0.115876621105;\n        result += texture(inTexture, blurTextureCoordinates[6]) * 0.147308056121;\n        result += texture(inTexture, blurTextureCoordinates[7]) * 0.159576912161;\n        result += texture(inTexture, blurTextureCoordinates[8]) * 0.147308056121;\n        result += texture(inTexture, blurTextureCoordinates[9]) * 0.115876621105;\n        result += texture(inTexture, blurTextureCoordinates[10]) * 0.0776744219933;\n        result += texture(inTexture, blurTextureCoordinates[11]) * 0.0443683338718;\n        result += texture(inTexture, blurTextureCoordinates[12]) * 0.0215963866053;\n        result += texture(inTexture, blurTextureCoordinates[13]) * 0.00895781211794;\n        result += texture(inTexture, blurTextureCoordinates[14]) * 0.0044299121055113265;\n        return result;\n      }\n    `\n  }\n}\n","import Matrix4 from \"../../node_modules/dlib/math/Matrix4.js\";\r\nimport GLProgram from \"../../node_modules/dlib/gl/GLProgram.js\";\r\nimport GLMesh from \"../../node_modules/dlib/gl/GLMesh.js\";\r\nimport Camera from \"../../node_modules/dlib/3d/Camera.js\";\r\nimport TrackballController from \"../../node_modules/dlib/3d/controllers/TrackballController.js\";\r\nimport GLVertexAttribute from \"../../node_modules/dlib/gl/GLVertexAttribute.js\";\r\nimport GLVertexArray from \"../../node_modules/dlib/gl/GLVertexArray.js\";\r\nimport GLBuffer from \"../../node_modules/dlib/gl/GLBuffer.js\";\r\nimport GLFrameBuffer from \"../../node_modules/dlib/gl/GLFrameBuffer.js\";\r\nimport GLTexture from \"../../node_modules/dlib/gl/GLTexture.js\";\r\nimport PlaneMesh from \"../../node_modules/dlib/3d/PlaneMesh.js\";\r\nimport GUI from \"../../node_modules/dlib/gui/GUI.js\";\r\nimport DepthShader from \"../../node_modules/dlib/shaders/DepthShader.js\";\r\nimport Pointer from \"../../node_modules/dlib/input/Pointer.js\";\r\nimport SandLayer from \"./SandLayer.js\";\r\nimport GLObject from \"../../node_modules/dlib/gl/GLObject.js\";\r\nimport BasicShader from \"../../node_modules/dlib/shaders/BasicShader.js\";\r\nimport BlurShader from \"../../node_modules/dlib/shaders/BlurShader.js\";\r\n\r\nconst DEPTH_FRAME_BUFFER_SIZE = 512;\r\n\r\nexport default class SandLayerProcessing {\r\n  constructor({ gl }) {\r\n    this.gl = gl;\r\n    this.frameBuffer1 = new GLFrameBuffer({\r\n      gl: this.gl\r\n    });\r\n    this.frameBuffer1.attach({\r\n      texture: new GLTexture({\r\n        gl: this.gl,\r\n        width: DEPTH_FRAME_BUFFER_SIZE,\r\n        height: DEPTH_FRAME_BUFFER_SIZE,\r\n        minFilter: this.gl.LINEAR\r\n      })\r\n    });\r\n\r\n    this.frameBuffer2 = new GLFrameBuffer({\r\n      gl: this.gl\r\n    });\r\n    this.frameBuffer2.attach({\r\n      texture: new GLTexture(this.frameBuffer1.colorTextures[0])\r\n    });\r\n\r\n    this.frameBuffer3 = new GLFrameBuffer({\r\n      gl: this.gl\r\n    });\r\n    this.frameBuffer3.attach({\r\n      texture: new GLTexture(this.frameBuffer1.colorTextures[0])\r\n    });\r\n\r\n    this.sandLayer = new SandLayer({\r\n      gl: this.gl\r\n    });\r\n\r\n    const quad = new GLMesh(Object.assign({\r\n      gl\r\n    }, new PlaneMesh({\r\n      width: 2, \r\n      height: 2,\r\n      normals: null\r\n    })));\r\n\r\n    this.basicPass = new GLObject({\r\n      gl,\r\n      mesh: quad,\r\n      program: new GLProgram({\r\n        gl,\r\n        shaders: [\r\n          new BasicShader({\r\n            normals: false\r\n          }),\r\n          {\r\n            uniforms: [\r\n              [\"frameTexture\", this.frameBuffer1.colorTextures[0]]\r\n            ],\r\n            fragmentShaderChunks: [\r\n              [\"start\", `\r\n              uniform sampler2D frameTexture;\r\n              `\r\n              ],\r\n              [\"end\", `\r\n                vec2 uv = vPosition.xy * .5 + .5;\r\n                // fragColor = texture(frameTexture, uv);\r\n                fragColor = texture(frameTexture, uv) * 10.;\r\n              `\r\n              ]\r\n            ]\r\n          }]\r\n      })\r\n    });\r\n\r\n    this.blurPass = new GLObject({\r\n      gl, \r\n      mesh: quad,\r\n      program: new GLProgram({\r\n        gl,\r\n        shaders: [\r\n          new BasicShader({\r\n            normals: false\r\n          }),\r\n          new BlurShader({\r\n            texture: this.frameBuffer1.colorTextures[0]\r\n          })\r\n        ]\r\n      })\r\n    });\r\n\r\n    this.depthPass = new GLObject({\r\n      gl,\r\n      mesh: quad,\r\n      program: new GLProgram({\r\n        gl,\r\n        shaders: [\r\n          new BasicShader({\r\n            normals: false\r\n          }),\r\n          {\r\n            uniforms: [\r\n              [\"sandDepthTexture\", this.frameBuffer3.colorTextures[0]]\r\n            ],\r\n            fragmentShaderChunks: [\r\n              [\"start\", `\r\n              uniform sampler2D sandDepthTexture;\r\n    \r\n              ${DepthShader.bumpFromDepth({\r\n                getDepth: `\r\n                  // return texture(depthTexture, uv).r;\r\n                  return smoothstep(0., 1., texture(depthTexture, uv).r);\r\n                `\r\n              })}\r\n              `\r\n              ],\r\n              [\"end\", `\r\n              vec2 uv = vPosition.xy * .5 + .5;\r\n              vec4 bump = bumpFromDepth(sandDepthTexture, uv, vec2(512.), 1.);\r\n              \r\n              vec3 color = vec3(1., .5, .5);\r\n              color += max(0., dot(vec3(1.), bump.xyz)) * .2;\r\n              \r\n              color = bump.xyz * .5 + .5;\r\n              \r\n              fragColor = vec4(color, 1.);\r\n              `\r\n              ]\r\n            ]\r\n          }]\r\n      })\r\n    });\r\n  }\r\n\r\n  draw({ pointer, camera }) {\r\n    this.frameBuffer1.bind();\r\n    this.gl.viewport(0, 0, DEPTH_FRAME_BUFFER_SIZE, DEPTH_FRAME_BUFFER_SIZE);\r\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\r\n    this.sandLayer.draw({\r\n      pointer,\r\n      camera,\r\n      frameTexture: this.frameBuffer2.colorTextures[0]\r\n    });\r\n    this.frameBuffer1.unbind();\r\n        \r\n    this.frameBuffer2.bind();\r\n    this.blurPass.program.use();\r\n    this.blurPass.program.uniforms.set(\"blurTexture\", this.frameBuffer1.colorTextures[0]);\r\n    this.blurPass.program.uniforms.set(\"blurDistance\", [0, .25]);\r\n    this.blurPass.draw();\r\n    this.frameBuffer2.unbind();\r\n    \r\n    this.frameBuffer3.bind();\r\n    this.blurPass.program.uniforms.set(\"blurTexture\", this.frameBuffer2.colorTextures[0]);\r\n    this.blurPass.program.uniforms.set(\"blurDistance\", [.25, 0]);\r\n    this.blurPass.draw();\r\n    this.frameBuffer3.unbind();\r\n\r\n    this.frameBuffer2.bind();\r\n    this.depthPass.draw();\r\n    this.frameBuffer2.unbind();\r\n\r\n    this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\r\n    \r\n    this.basicPass.program.use();\r\n    // this.basicPass.program.uniforms.set(\"frameTexture\", this.frameBuffer2.colorTextures[0]);\r\n    this.basicPass.program.uniforms.set(\"frameTexture\", this.frameBuffer1.colorTextures[0]);\r\n    this.basicPass.draw();\r\n\r\n    // this.sandLayer.draw({\r\n    //   camera,\r\n    //   pointer,\r\n    //   frameTexture: this.frameBuffer2.colorTextures[0]\r\n    // });\r\n  }\r\n}","import Matrix4 from \"../../node_modules/dlib/math/Matrix4.js\";\r\nimport GLProgram from \"../../node_modules/dlib/gl/GLProgram.js\";\r\nimport GLMesh from \"../../node_modules/dlib/gl/GLMesh.js\";\r\nimport Camera from \"../../node_modules/dlib/3d/Camera.js\";\r\nimport TrackballController from \"../../node_modules/dlib/3d/controllers/TrackballController.js\";\r\nimport GLVertexAttribute from \"../../node_modules/dlib/gl/GLVertexAttribute.js\";\r\nimport GLVertexArray from \"../../node_modules/dlib/gl/GLVertexArray.js\";\r\nimport GLBuffer from \"../../node_modules/dlib/gl/GLBuffer.js\";\r\nimport GLFrameBuffer from \"../../node_modules/dlib/gl/GLFrameBuffer.js\";\r\nimport GLTexture from \"../../node_modules/dlib/gl/GLTexture.js\";\r\nimport PlaneMesh from \"../../node_modules/dlib/3d/PlaneMesh.js\";\r\nimport GUI from \"../../node_modules/dlib/gui/GUI.js\";\r\nimport DepthShader from \"../../node_modules/dlib/shaders/DepthShader.js\";\r\nimport GLPlaneObject from \"../../node_modules/dlib/gl/GLPlaneObject.js\";\r\nimport Pointer from \"../../node_modules/dlib/input/Pointer.js\";\r\nimport SandLayer from \"./SandLayer.js\";\r\nimport SandLayerProcessing from \"./SandLayerProcessing.js\";\r\n\r\nexport default class View {\r\n  constructor({ canvas } = { canvas }) {\r\n    this.canvas = canvas;\r\n\r\n    const webGLOptions = {\r\n      depth: true,\r\n      alpha: false,\r\n      // antialias: true\r\n    };\r\n\r\n    this.pointer = Pointer.get(this.canvas);\r\n\r\n    if (!/\\bforcewebgl1\\b/.test(window.location.search)) {\r\n      this.gl = this.canvas.getContext(\"webgl2\", webGLOptions);\r\n    }\r\n    if (!this.gl) {\r\n      this.gl = this.canvas.getContext(\"webgl\", webGLOptions) || this.canvas.getContext(\"experimental-webgl\", webGLOptions);\r\n    }\r\n\r\n    this.camera = new Camera();\r\n    \r\n    this.cameraController = new TrackballController({\r\n      matrix: this.camera.transform,\r\n      distance: Math.sqrt(3),\r\n      // enabled: false\r\n    });\r\n\r\n    this.gl.clearColor(0, 0, 0, 1);\r\n    // this.gl.enable(this.gl.CULL_FACE);\r\n    // this.gl.enable(this.gl.DEPTH_TEST);\r\n\r\n    this.quad = new GLPlaneObject({\r\n      gl: this.gl,\r\n      transform: null,\r\n      width: 2,\r\n      height: 2,\r\n      normals: null,\r\n      uvs: null\r\n    });\r\n\r\n    this.sandLayerProcessing = new SandLayerProcessing({\r\n      gl: this.gl\r\n    });\r\n\r\n    // this.quad = new GLMesh({\r\n    //   gl: this.gl,\r\n    //   attributes: [\r\n    //     [\"position\", new GLVertexAttribute({\r\n    //       gl: this.gl,\r\n    //       data: new PlaneMesh({\r\n    //         width: 2,\r\n    //         height: 2\r\n    //       }).positions,\r\n    //       size: 3\r\n    //     })]\r\n    //   ]\r\n    // });\r\n\r\n    // this.program = new GLProgram({\r\n    //   gl: this.gl,\r\n    //   vertexShaderChunks: [\r\n    //     [\"start\", `\r\n    //       in vec3 position;\r\n    //       out vec3 vPosition;\r\n    //     `],\r\n    //     [\"end\", `\r\n    //       vPosition = position;\r\n    //       gl_Position = vec4(position, 1.);\r\n    //     `]\r\n    //   ],\r\n    //   fragmentShaderChunks: [\r\n    //     [\"start\", `\r\n    //       precision highp float;\r\n\r\n    //       uniform sampler2D frameBufferTexture;\r\n\r\n    //       in vec3 vPosition;\r\n    //     `],\r\n    //     [\"end\", `\r\n    //       vec2 uv = vPosition.xy * .5 + .5;\r\n    //       fragColor = texture(frameBufferTexture, uv);\r\n    //     `]\r\n    //   ]\r\n    // });\r\n  }\r\n\r\n  resize(width, height) {\r\n    // this.camera.aspectRatio = width / height;\r\n\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\r\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\r\n\r\n    this.cameraController.update();\r\n\r\n    // this.quad.draw({\r\n    //   // camera: this.camera\r\n    // });\r\n\r\n    this.sandLayerProcessing.draw({\r\n      pointer: this.pointer,\r\n      camera: this.camera\r\n    });\r\n  }\r\n}\r\n","import LoopElement from \"../../node_modules/dlib/customelements/LoopElement.js\";\r\nimport Loader from \"../../node_modules/dlib/utils/Loader.js\";\r\n\r\nimport View from \"./View.js\";\r\n\r\nconst LOAD_PROMISE = Promise.all([\r\n  Loader.load({ value: \"src/main/template.html\", type: \"template\" }),\r\n  Loader.load(\"src/main/index.css\")\r\n]);\r\n\r\nwindow.customElements.define(\"dnit-main\", class extends LoopElement {\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    LOAD_PROMISE.then(([template]) => {\r\n      let templateClone = document.importNode(template.content, true);\r\n      this.appendChild(templateClone);\r\n\r\n      this.canvas = this.querySelector(\"canvas\");\r\n  \r\n      this.view = new View({canvas: this.canvas});\r\n      \r\n      window.addEventListener(\"resize\", this._resizeBinded = this.resize.bind(this));\r\n      this.resize();\r\n\r\n      this.play();\r\n    });\r\n\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    window.removeEventListener(\"resize\", this._resizeBinded);\r\n  }\r\n\r\n  resize() {\r\n    let width = this.canvas.offsetWidth;\r\n    let height = this.canvas.offsetHeight;\r\n\r\n    this.canvas.width = width * Math.min(window.devicePixelRatio, 2);\r\n    this.canvas.height = height * Math.min(window.devicePixelRatio, 2);\r\n\r\n    this.view.resize(width, height);\r\n  }\r\n\r\n  update() {\r\n    this.view.update();\r\n  }\r\n});\r\n"],"names":["Ticker","mat4.set","mat4.translate","mat4.rotateX","mat4.rotateY","mat4.rotateZ","mat4.scale","mat4.multiply","mat4.identity","mat4.copy","mat4.perspective","mat4.fromQuat","mat4.invert","create","glMatrix.ARRAY_TYPE","copy","set","add","subtract","scale","exactEquals","sub","mul","multiply","vec2.set","vec2.copy","vec2.add","vec2.length","vec2.squaredLength","vec2.subtract","vec2.negate","vec2.cross","vec2.scale","vec2.normalize","vec2.dot","vec2.exactEquals","vec2.transformMat3","vec2.transformMat4","vec2.lerp","length","fromValues","distance","squaredLength","negate","normalize","dot","cross","transformMat4","div","divide","dist","sqrDist","squaredDistance","len","sqrLen","forEach","vec3.set","vec3.copy","vec3.add","vec3.length","vec3.squaredLength","vec3.distance","vec3.subtract","vec3.negate","vec3.cross","vec3.scale","vec3.normalize","vec3.dot","vec3.exactEquals","vec3.transformMat4","vec3.angle","vec4.set","identity","invert","translate","rotate","fromQuat","mat3.set","mat3.translate","mat3.rotate","mat3.scale","mat3.multiply","mat3.identity","mat3.copy","mat3.fromMat4","mat3.fromQuat","mat3.invert","rotateX","rotateY","rotateZ","clone","vec4.clone","vec4.fromValues","vec4.copy","vec4.add","vec4.scale","vec4.dot","lerp","vec4.lerp","vec4.length","vec4.squaredLength","vec4.normalize","vec4.exactEquals","equals","vec4.equals","vec3.create","vec3.fromValues","vec3.len","mat3.create","quat.identity","quat.set","quat.rotateX","quat.rotateY","quat.rotateZ","quat.invert","quat.copy","quat.normalize","quat.multiply","quat.fromMat3","style"],"mappings":"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,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACrD,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;EAEvD,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAChC,IAAI,GAAG,GAAG,GAA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IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACrD,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;;EAGvD,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAChD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;;EAE3C,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;;EAE3C,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7C,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC3C,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC5C,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;;EAE5C,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/C,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC5C,GAAG,CAAC,EAAE,C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C,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEvC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEvC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;;EAE3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG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"}